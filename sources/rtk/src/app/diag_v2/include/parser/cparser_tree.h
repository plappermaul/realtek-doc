/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

extern cparser_node_t cparser_root;

cparser_result_t cparser_cmd_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_iss(cparser_context_t *context);
cparser_result_t cparser_cmd_unit_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_terminal_set_pager_length_num(cparser_context_t *context,
    uint32_t *num_ptr);
cparser_result_t cparser_cmd_sdk_set_rtk_api_backward_compatible_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_set_rx_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_set_rx_tx_trace_start_raw_data_cpu_tag(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_set_rx_tx_trace_stop(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_set_tag_manual_tag(cparser_context_t *context,
    char **tag_ptr);
cparser_result_t cparser_cmd_nic_set_tag_none(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_set_tag_auto_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_nic_set_tx_data_data_auto_len(cparser_context_t *context,
    char **data_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_nic_set_debug_app_loopback_mode_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_dump_buffer_usage_tx_rx(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_dump_pkthdr_mbuf_raw_data(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_dump_pkthdr_mbuf_tx_ring_idx_raw_data(cparser_context_t *context,
    uint32_t *ring_idx_ptr);
cparser_result_t cparser_cmd_nic_dump_pkthdr_mbuf_rx_ring_idx_raw_data(cparser_context_t *context,
    uint32_t *ring_idx_ptr);
cparser_result_t cparser_cmd_nic_reset_dump_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_get(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_get_rx_tx(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_get_debug_app_loopback_mode_state(cparser_context_t *context);
cparser_result_t cparser_cmd_nic_send_packet_num_num(cparser_context_t *context,
    uint32_t *num_ptr);
cparser_result_t cparser_cmd_stack_get_port(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_get_devID(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_get_master_devID(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_get_loop_guard_state(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_get_dev_port_map_dev_devID_all(cparser_context_t *context,
    char **devID_ptr);
cparser_result_t cparser_cmd_stack_get_non_unicast_block_src_dev_devID_port(cparser_context_t *context,
    uint32_t *devID_ptr);
cparser_result_t cparser_cmd_stack_get_shrink_state(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_set_port_ports_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_stack_set_devID_devID(cparser_context_t *context,
    uint32_t *devID_ptr);
cparser_result_t cparser_cmd_stack_set_master_devID_devID(cparser_context_t *context,
    uint32_t *devID_ptr);
cparser_result_t cparser_cmd_stack_set_loop_guard_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_stack_set_dev_port_map_dev_devID_all_port_ports_none(cparser_context_t *context,
    char **devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_stack_set_non_unicast_block_src_dev_devID_port_ports_none(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_stack_set_shrink_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_asic_auto_dying_gasp_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_get_dying_gasp_waiting_time(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_dying_gasp_packet_count(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_loopback_ctrl_mac_swap_state(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_loopback_ctrl_port_ports_all_mux(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_get_pdu_sa_learn(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_asic_auto_dying_gasp_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_set_dying_gasp_port_ports_all_payload_payload(cparser_context_t *context,
    char **ports_ptr,
    char **payload_ptr);
cparser_result_t cparser_cmd_oam_set_dying_gasp_send_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_dying_gasp_waiting_time_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_oam_set_dying_gasp_packet_count_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_oam_set_loopback_ctrl_mac_swap_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_loopback_ctrl_port_ports_all_mux_action_drop_forward(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_set_pdu_sa_learn_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_uart1_get_character_number_timeout_timeout(cparser_context_t *context,
    uint32_t *number_ptr,
    uint32_t *timeout_ptr);
cparser_result_t cparser_cmd_uart1_get_baudrate(cparser_context_t *context);
cparser_result_t cparser_cmd_uart1_put_character_string(cparser_context_t *context,
    char **string_ptr);
cparser_result_t cparser_cmd_uart1_set_baudrate_9600_19200_38400_57600_115200(cparser_context_t *context);
cparser_result_t cparser_cmd_uart1_poe_init(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_back_pressure_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_type_link_down_flush_suspend_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_type_tag_sts_dablk_sablk_static_dynamic_hash_full_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_debug_flag(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_dst(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_dmac_smac(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_get_magic_num(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_set_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_set_back_pressure_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_l2_ntfy_set_type_link_down_flush_suspend_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_set_type_tag_sts_dablk_sablk_static_dynamic_hash_full_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_set_debug_flag_bitmask(cparser_context_t *context,
    uint32_t *bitmask_ptr);
cparser_result_t cparser_cmd_l2_ntfy_set_dst_send_to_local_send_to_master_nic(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_ntfy_set_dmac_smac_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_ntfy_set_magic_num_num(cparser_context_t *context,
    uint32_t *num_ptr);
cparser_result_t cparser_cmd_l2_ntfy_reset_dump_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_del_entry_phase_phase_start_start_end_end(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *start_ptr,
    uint32_t *end_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_action(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_field_field_name(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    char **field_name_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_operation_aggregate1_state(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_operation_aggregate2_state(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_operation_reverse_state(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_validate(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_entry_index_hit_indication(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_field_list(cparser_context_t *context,
    uint32_t *phase_ptr);
cparser_result_t cparser_cmd_acl_get_entry_phase_phase_hit_indication_mask(cparser_context_t *context,
    uint32_t *phase_ptr);
cparser_result_t cparser_cmd_acl_get_entry_buffer(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_entry_buffer_phase_phase_entry_index_field_field_name(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    char **field_name_ptr);
cparser_result_t cparser_cmd_acl_get_selector_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_loopback(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_port_port_igr_lookup_state(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_acl_get_phase_phase_entry_index_counter_byte_packet_all(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_phase_phase_field_field_name(cparser_context_t *context,
    uint32_t *phase_ptr,
    char **field_name_ptr);
cparser_result_t cparser_cmd_acl_set_selector_block_index_template_index0_template_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *template_index_ptr);
cparser_result_t cparser_cmd_acl_set_selector_block_index_template_index1_template_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *template_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_bypass_ingress_bandwidth_control_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_bypass_ingress_stp_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_bypass_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_bypass_ingress_vlan_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_copy_portmask_index_portmask_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *portmask_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_copy_dev_devID_port_port(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *devID_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_copy_trunk_tid(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *tid_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_forward_drop(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_forward_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_forward_cpu_packet_format_original_modified(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_forward_precedence_select_drop_select_forward(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_forward_sa_learn_null_not_learn(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_filtering_portmask_index_portmask_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *portmask_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_loopback_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_meter_meter_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *meter_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_meter_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_mirror_mirror_index_original_modified(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *mirror_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_mirror_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_mirror_cancel(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_permit(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_priority_priority(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_redirect_portmask_index_portmask_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *portmask_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_redirect_dev_devID_port_port(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *devID_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_redirect_trunk_tid(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *tid_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_remark_dscp_dscp(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_remark_ip_precedence_precedence(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *precedence_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_remark_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_remark_tos_tos(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *tos_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_remark_eav_eav(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *eav_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_routing_unicast_next_hop_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *next_hop_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_routing_unicast_null_intf_drop_trap_local_cpu_trap_master_cpu(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_statistic_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_statistic_packet32_byte64(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_tag_inner_outer_untag_tag_keep_reserved(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_tag_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_inner_outer_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_inner_tpid_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_inner_tpid_index_tpid_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_outer_tpid_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_outer_tpid_index_tpid_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_inner_vid_assign_shift_shift_from_outer_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_vlan_xlate_outer_vid_assign_shift_shift_from_inner_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_default_routing_unicast_next_hop_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *next_hop_index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_default_routing_unicast_null_intf_drop_trap_local_cpu_trap_master_cpu(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_inner_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_inner_priority_assign_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_inner_priority_copy_from_outer_keep(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_outer_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_outer_priority_assign_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_outer_priority_copy_from_inner_keep(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_cpu_qid_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_cpu_qid_qid(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_meta_data_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_meta_data_data(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_yellow_remark_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_yellow_remark_dscp_ip_precedence_tos_eav_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_red_remark_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_red_remark_dscp_ip_precedence_tos_eav_value(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_ip_rsvd_flag_invert_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_drop_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_drop_permit_drop(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_yellow_drop_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_yellow_drop_permit_drop(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_red_drop_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_action_red_drop_permit_drop(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_field_field_name_data_data_mask_mask(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    char **field_name_ptr,
    char **data_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_operation_aggregate1_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_operation_aggregate2_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_operation_reverse_state_disable_enable(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_phase_phase_entry_index_state_valid_invalid(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_entry_buffer_phase_phase_entry_index_field_field_name_data_data_mask_mask(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    char **field_name_ptr,
    char **data_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_loopback_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_limit_loopback_times(cparser_context_t *context,
    uint32_t *times_ptr);
cparser_result_t cparser_cmd_acl_set_port_port_igr_lookup_state_disable_enable(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_acl_reset_entry_phase_phase_entry_index_hit_indication(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_move_entry_phase_phase_from_from_to_to_entry_num_entry_num(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *from_ptr,
    uint32_t *to_ptr,
    uint32_t *entry_num_ptr);
cparser_result_t cparser_cmd_acl_init_entry_buffer(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_write_entry_buffer_phase_phase_entry_index(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_clear_phase_phase_entry_index_counter_byte_packet_all(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_dump_entry_phase_phase_entry_index_index_end(cparser_context_t *context,
    uint32_t *phase_ptr,
    uint32_t *index_ptr,
    uint32_t *index_end_ptr);
cparser_result_t cparser_cmd_debug_get_version(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_flowctrl_used_page_cnt_egress_ingress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_get_flowctrl_used_page_cnt_system(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_flowctrl_used_page_cnt_queue_based_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_get_log(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_memory_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_memory_allocated(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_memory_available(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_table_table_idx_address(cparser_context_t *context,
    uint32_t *table_idx_ptr,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_debug_get_sw_wd(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_chip(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_image_info(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsa(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsb(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsm_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_dump_mib_counter_debug_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_dump_mib_counter_debug_all(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_8295r_eye_param_reg_mdx_macId_8431_daclong_dac_type(cparser_context_t *context,
    uint32_t *mdx_macId_ptr);
cparser_result_t cparser_cmd_debug_dump_phy_port_ports_all_dsp_cnt_count_mask_bitmask(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *count_ptr,
    uint64_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_dump_phy_port_ports_all_coupling_channel(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *channel_ptr);
cparser_result_t cparser_cmd_debug_set_log_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_level_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_mask_bitmask(cparser_context_t *context,
    uint32_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_type_level_level_mask(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_format_normal_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_module_bitmask(cparser_context_t *context,
    uint64_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_memory_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_sw_wd_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_phy_port_port_serdes_id_sdsId_rx_cali_start(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_debug_flashtest_mtd_mtd_idx(cparser_context_t *context,
    uint32_t *mtd_idx_ptr);
cparser_result_t cparser_cmd_debug_phy_cmd_name_port_ports_none_param1_param2_param3_param4_param5(cparser_context_t *context,
    char **cmd_name_ptr,
    char **ports_ptr,
    uint32_t *param1_ptr,
    uint32_t *param2_ptr,
    uint32_t *param3_ptr,
    uint32_t *param4_ptr,
    uint32_t *param5_ptr);
cparser_result_t cparser_cmd_debug_linkmon_polling_stop(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_linkmon_polling_resume(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_batch_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd(cparser_context_t *context,
    char **cmd_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd_param1(cparser_context_t *context,
    char **cmd_ptr,
    uint32_t *param1_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd_param1_param2(cparser_context_t *context,
    char **cmd_ptr,
    uint32_t *param1_ptr,
    uint32_t *param2_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd_param1_param2_param3(cparser_context_t *context,
    char **cmd_ptr,
    uint32_t *param1_ptr,
    uint32_t *param2_ptr,
    uint32_t *param3_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd_param1_param2_param3_param4(cparser_context_t *context,
    char **cmd_ptr,
    uint32_t *param1_ptr,
    uint32_t *param2_ptr,
    uint32_t *param3_ptr,
    uint32_t *param4_ptr);
cparser_result_t cparser_cmd_debug_batch_cmd_param1_param2_param3_param4_param5(cparser_context_t *context,
    char **cmd_ptr,
    uint32_t *param1_ptr,
    uint32_t *param2_ptr,
    uint32_t *param3_ptr,
    uint32_t *param4_ptr,
    uint32_t *param5_ptr);
cparser_result_t cparser_cmd_diag_set_sc_reg_mdx_macId_reg_addr_reg_data(cparser_context_t *context,
    uint32_t *mdx_macId_ptr,
    uint32_t *reg_addr_ptr,
    uint32_t *reg_data_ptr);
cparser_result_t cparser_cmd_diag_set_sc_serdes_mdx_macId_sds_idx_page_reg_data(cparser_context_t *context,
    uint32_t *mdx_macId_ptr,
    uint32_t *sds_idx_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_diag_set_sc_patch_port_mdx_macId_serdes_name(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *mdx_macId_ptr,
    uint32_t *serdes_ptr,
    char **name_ptr);
cparser_result_t cparser_cmd_diag_set_sc_patch_debug_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_diag_set_8390_10g_media_port_ports_all_fiber10g_fiber1g_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_diag_set_cable_doctor_port_ports_all_start(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_diag_set_phy_port_ports_all_rx_cnt_mac_tx_phy_rx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_sff_8431_test_port_port_serdes_sdsId_pattern_init_square8180_prbs9_prbs31_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_param_cfg_port_port_dac_long_cable_offset_offset(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_param_cfg_port_port_sdsId_vth_min_threshold_tap0_init_value(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *threshold_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_param_cfg_port_port_sdsId_eq_hold_enable_disable_dfe_tap1_4_enable_disable_dfe_auto_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_param_cfg_port_port_sdsId_rx_cali_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_port_sdsId_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8295r_rx_cali_port_sdsId_start(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8214qf_rx_cali_param_cfg_port_port_sdsId_vth_min_threshold_tap0_init_value(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *threshold_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_diag_set_8214qf_rx_cali_param_cfg_port_port_sdsId_eq_hold_enable_disable_dfe_tap1_4_enable_disable_dfe_auto_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_set_8214qf_rx_cali_param_cfg_port_port_sdsId_rx_cali_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_diag_get_sc_reg_mdx_macId_reg_addr(cparser_context_t *context,
    uint32_t *mdx_macId_ptr,
    uint32_t *reg_addr_ptr);
cparser_result_t cparser_cmd_diag_get_sc_serdes_mdx_macId_sds_idx_page_reg(cparser_context_t *context,
    uint32_t *mdx_macId_ptr,
    uint32_t *sds_idx_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_ptr);
cparser_result_t cparser_cmd_diag_get_cable_doctor_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_diag_get_phy_phyId_serdes_link_status(cparser_context_t *context,
    uint32_t *phyId_ptr);
cparser_result_t cparser_cmd_diag_get_phy_phyId_serdes_rx_sym_err(cparser_context_t *context,
    uint32_t *phyId_ptr);
cparser_result_t cparser_cmd_diag_get_phy_port_ports_all_rx_cnt(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_diag_get_8295r_rx_cali_param_cfg_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_diag_get_8214qf_rx_cali_param_cfg_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_diag_dump_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_diag_dump_table_index_start_index_end_index_detail(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *start_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_diag_dump_table_name_index_all(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_diag_dump_table_name_start_index_end_index_raw(cparser_context_t *context,
    char **name_ptr,
    uint32_t *start_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_diag_list_table_keyword(cparser_context_t *context,
    char **keyword_ptr);
cparser_result_t cparser_cmd_diag_modify_table_tbl_name_start_index_end_index_field_val_pairs(cparser_context_t *context,
    char **tbl_name_ptr,
    uint32_t *start_index_ptr,
    uint32_t *end_index_ptr,
    char **field_val_pairs_ptr);
cparser_result_t cparser_cmd_diag_write_table_datareg_index_entry_index_datareg_index_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *entry_index_ptr,
    uint32_t *datareg_index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_diag_write_table_datareg_name_entry_index_datareg_index_value(cparser_context_t *context,
    char **name_ptr,
    uint32_t *entry_index_ptr,
    uint32_t *datareg_index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_diag_write_table_entry_index_entry_index_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *entry_index_ptr,
    char **value_ptr);
cparser_result_t cparser_cmd_diag_write_table_entry_name_entry_index_value(cparser_context_t *context,
    char **name_ptr,
    uint32_t *entry_index_ptr,
    char **value_ptr);
cparser_result_t cparser_cmd_diag_wholedump_mac_reg_phy_reg_soc_reg_table_all(cparser_context_t *context);
cparser_result_t cparser_cmd_diag_clear_phy_phyId_serdes_rx_sym_err(cparser_context_t *context,
    uint32_t *phyId_ptr);
cparser_result_t cparser_cmd_diag_clear_phy_port_ports_all_rx_cnt(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_rx_cali_param_cfg(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_rx_cali_state(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_rx_cali_status(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_link_status(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_rx_sym_err(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_testmode_cnt(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_leq(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_cmu_band(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_eye_param(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_sdsId_loopback(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_get_id_sdsId_page_page_reg_reg(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_rx_cali_param_cfg_dac_long_cable_offset_offset(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_rx_cali_param_cfg_vth_min_threshold_tap0_init_value(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *threshold_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_rx_cali_param_cfg_eq_hold_enable_disable_dfe_tap1_4_enable_disable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_rx_cali_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_rx_cali_start(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_10g_square_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_10g_prbs9_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_10g_prbs31_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_leq_adapt(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_leq_manual_enable_disable_val(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *val_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_xsg_nway_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_cmu_band_state_disable_enable_data_data(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_eye_param_pre_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_eye_param_post_state_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_eye_param_pre_amp_pre_amp(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *pre_amp_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_eye_param_main_amp_main_amp(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *main_amp_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_eye_param_post_amp_post_amp(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *post_amp_ptr);
cparser_result_t cparser_cmd_serdes_set_sdsId_loopback_disable_enable(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_set_rx_cali_debug_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_serdes_set_id_sdsId_page_page_reg_reg_data_data(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_serdes_reset_sdsId(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_clear_sdsId_rx_sym_err(cparser_context_t *context,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_serdes_eye_monitor_sdsId_frameNum(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *frameNum_ptr);
cparser_result_t cparser_cmd_serdes_eye_monitor_info_sdsId_frameNum(cparser_context_t *context,
    uint32_t *sdsId_ptr,
    uint32_t *frameNum_ptr);
cparser_result_t cparser_cmd_eee_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_eee_get_port_ports_all_direction_ingress_egress_power_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_eee_set_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_congest_avoidance(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_congest_avoidance_queue_threshold_queue_id_qid_all(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_congest_avoidance_port_ports_all_algorithm(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_mode_status(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_mode_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_mode_length(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_system_guarantee_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_system_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_system_jumbo_mode_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_port_ports_all_threshold_group(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_port_ports_all_pause_on_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_port_ports_all_pause_on_allowed_num_page(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_threshold_group_index_guarantee_threshold(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_threshold_group_index_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_get_system_utilization_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_system_drop_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_refer_rx_congest(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_queue_queue_id_force_drop_state(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_id_qid_all_drop_threshold_high_low(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_cpu_queue_id_qid_drop_threshold_high_low(cparser_context_t *context,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_queue_id_threshold_group_index_high_low_drop_threshold(cparser_context_t *context,
    uint32_t *queue_id_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egr_port_queue_port_ports_all_threshold_group(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_hol_traffic_drop_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_hol_traffic_drop_traffic_type_unknown_ucast_l2_mcast_ip_mcast_bcast_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_e2e_remote_drop_threshold_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_e2e_remote_port_threshold_group_index_fc_off_fc_on_threshold(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_get_e2e_remote_port_ports_all_threshold_group(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_half_consecutive_retry_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_algorithm_swred(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_algorithm_td(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_port_ports_all_algorithm_swred(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_port_ports_all_algorithm_td(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_queue_threshold_queue_id_qid_all_drop_precedence_dp_drop_probability_probability(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *dp_ptr,
    uint32_t *probability_ptr);
cparser_result_t cparser_cmd_flowctrl_set_congest_avoidance_queue_threshold_queue_id_qid_all_drop_precedence_dp_max_threshold_max_threshold_min_threshold_min_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *dp_ptr,
    uint32_t *max_threshold_ptr,
    uint32_t *min_threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_mode_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_mode_length_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_system_guarantee_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_ingress_system_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_system_jumbo_mode_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_port_ports_all_threshold_group_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_port_ports_all_pause_on_action_drop_receive(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_port_ports_all_pause_on_allowed_num_page_number(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_threshold_group_index_guarantee_threshold_threshold(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_threshold_group_index_fc_off_threshold_fc_on_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_system_utilization_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_system_drop_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_refer_rx_congest_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_queue_queue_id_force_drop_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_id_qid_all_drop_threshold_high_low_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_cpu_queue_id_qid_drop_threshold_high_low_threshold(cparser_context_t *context,
    uint32_t *qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_queue_id_threshold_group_index_high_low_drop_threshold_threshold(cparser_context_t *context,
    uint32_t *queue_id_ptr,
    uint32_t *index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egr_port_queue_port_ports_all_threshold_group_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_set_hol_traffic_drop_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_hol_traffic_drop_traffic_type_unknown_ucast_l2_mcast_ip_mcast_bcast_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_e2e_remote_drop_threshold_high_low_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_e2e_remote_port_threshold_group_index_fc_off_fc_on_high_low_threshold_threshold(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_e2e_remote_port_ports_all_threshold_group_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_set_half_consecutive_retry_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_stack_auto_learn_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_stack_ucast_age_out_valid_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_hash_algorithm(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_hash_algorithm_block_id(cparser_context_t *context,
    uint32_t *block_id_ptr);
cparser_result_t cparser_cmd_l2_table_get_entry_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_valid_entry_type_uc_dynamic_uc_software_cfg_uc_nexthop_uc_mc_nexthop_mc_start_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_link_down_flush_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_global(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_port_trunk_port_trunk_all(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_vlan_based_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_age_aging_time_auto(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_age_aging_time_suspend(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_age_aging_out_port_trunk_port_trunk_all_state(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_get_learning_full_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_src_mac_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_get_port_move_dynamic_port_move_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_get_port_move_sttc_port_move(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_port_move_dynamic_port_move_forbid_port_trunk_port_trunk_all_state(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_get_port_move_dynamic_port_move_forbid_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_bcast_unicast_fwd_port(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_port_port_all_unicast_action(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_get_src_port_egress_filter_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_get_except_smac(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_sa_block_da_block_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_fwd_table_low_idx_high_idx(cparser_context_t *context,
    uint32_t *low_idx_ptr,
    uint32_t *high_idx_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_mcast_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_conflict_entry_mac_ucast_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_port_ctrl_port_port_all_sa_act_ref(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_get_hash_index_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_counter_all_software_cfg_mcast_ucast_software_cfg(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_stack_auto_learn_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_stack_ucast_age_out_valid_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_fwd_table_index_port_all(cparser_context_t *context,
    uint32_t *index_ptr,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_hash_algorithm_algo0_algo1(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_hash_algorithm_block_id_algo0_algo1(cparser_context_t *context,
    uint32_t *block_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_link_down_flush_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_dynamic_only_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_port_trunk_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_port_trunk_id_vid_vid_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_vid_vid_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_devID_devID_port_trunk_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_flush_entry_devID_devID_port_trunk_id_vid_vid_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_port_trunk_id_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_port_trunk_id_vid_vid_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *vid_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_vid_vid_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_vid_vid_replace_dev_replace_devID_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *replace_devID_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_replace_dev_replace_devID_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *replace_devID_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_devID_devID_port_trunk_id_replace_dev_replace_devID_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *replace_devID_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_replace_entry_devID_devID_port_trunk_id_vid_vid_replace_dev_replace_devID_replace_port_replace_trunk_replace_id_dynamic_only_include_static(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *vid_ptr,
    uint32_t *replace_devID_ptr,
    uint32_t *replace_id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop_port_trunk_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop_port_trunk_id_vid_vid(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop_devID_devID_port_trunk_id(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_nexthop_devID_devID_port_trunk_id_vid_vid(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_port_trunk_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_port_trunk_id_vid_vid(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_port_trunk_id_vid_vid_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *vid_ptr,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_port_trunk_id_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_vid_vid_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_devID_devID_port_trunk_id(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_devID_devID_port_trunk_id_vid_vid(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_devID_devID_port_trunk_id_vid_vid_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *vid_ptr,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_clear_aggVid_devID_devID_port_trunk_id_agg_vid_agg_vid(cparser_context_t *context,
    uint32_t *devID_ptr,
    uint32_t *id_ptr,
    uint32_t *agg_vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_global_max_count(cparser_context_t *context,
    uint32_t *max_count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_global_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_global_action_copy_to_master_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_trunk_port_trunk_all_max_count(cparser_context_t *context,
    char **port_trunk_ptr,
    uint32_t *max_count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_trunk_port_trunk_all_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_trunk_port_trunk_all_action_copy_to_master_trap_to_master(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_vlan_based_index_vid_vid_max_count(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *max_count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_vlan_based_index_vid_vid_port_trunk_id_max_count(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *id_ptr,
    uint32_t *max_count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_vlan_based_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_vlan_based_action_copy_to_master_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_age_aging_time_auto_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_l2_table_set_age_aging_time_suspend_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_l2_table_set_age_aging_out_port_trunk_port_trunk_all_state_disable_enable(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_set_learning_full_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_learning_full_action_copy_to_master_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_src_mac_port_port_all_learn_mode_asic_learn_software_learn_not_learn_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_src_mac_port_port_all_learn_mode_asic_learn_software_learn_not_learn_action_copy_to_master_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_port_port_all_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_port_port_all_action_copy_to_master_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_port_port_all_learn_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_sttc_port_move_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_port_move_sttc_port_move_action_copy_to_master_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_port_move_sttc_port_move_learn_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_forbid_port_trunk_port_trunk_all_state_disable_enable(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_forbid_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_port_move_dynamic_port_move_forbid_action_copy_to_master_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_add_del_set_lookup_miss_bcast_unicast_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_port_all_unicast_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_port_all_unicast_action_copy_to_master_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_src_port_egress_filter_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_except_smac_zero_sa_learn_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_except_smac_mcast_bcast_sa_zero_sa_action_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_except_smac_mcast_bcast_sa_zero_sa_action_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_sa_block_da_block_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_set_mac_ucast_vid_mac_port_trunk_id_sa_block_da_block_static_nexthop_suspend(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_add_set_mac_ucast_vid_mac_devID_devID_port_trunk_id_sa_block_da_block_static_nexthop_suspend_aged(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *devID_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l2_table_set_mac_ucast_vid_mac_nexthop_mac_idx(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *mac_idx_ptr);
cparser_result_t cparser_cmd_l2_table_add_set_mac_mcast_vid_mac_port_port_all_nexthop(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_set_mac_mcast_vid_mac_nexthop_mac_idx(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *mac_idx_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_ctrl_port_port_all_sa_act_ref_port_vlan_profile(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_del_all_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_del_mac_ucast_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_mcast_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_del_cpu_mac_vid_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_base_entry_mac_ucast_mac_dynamic_only_include_static(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_base_entry_mac_mcast_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_dump_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_l2_table_dump_mac_ucast_dynamic_static_nexthop_all(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_dump_mac_ucast_port_trunk_port_trunk_all_dynamic_static_nexthop_all(cparser_context_t *context,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_dump_mac_ucast_devID_devID_port_trunk_port_trunk_all_dynamic_static_nexthop_all(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **port_trunk_ptr);
cparser_result_t cparser_cmd_l2_table_dump_mac_mcast_nexthop(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_reset_limit_learning_vlan_based_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_mac_index_index_nexthop(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l3_get_info(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_router_mac_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l3_get_intf_intf_id(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_get_intf_intf_id_ipuc_ip6uc_icmp_redirect_action(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_get_intf_intf_id_pbr_ipuc_ip6uc_icmp_redirect_action(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_get_intf_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l3_get_intf_vid_vid_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_get_vrrp_flags_ipv4_ipv6_vid_vid_vrid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l3_get_next_hop_nh_id_nh_id(cparser_context_t *context,
    uint32_t *nh_id_ptr);
cparser_result_t cparser_cmd_l3_get_next_hop_intf_intf_id_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_get_host_vrf_id_vrf_id_ip_ip_addr_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr);
cparser_result_t cparser_cmd_l3_get_host_vrf_id_vrf_id_ip6_ip6_addr_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr);
cparser_result_t cparser_cmd_l3_get_host_conflict_list_vrf_id_vrf_id_ip_ip_addr_max_host_max_host(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *max_host_ptr);
cparser_result_t cparser_cmd_l3_get_host_conflict_list_vrf_id_vrf_id_ip6_ip6_addr_max_host_max_host(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *max_host_ptr);
cparser_result_t cparser_cmd_l3_get_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_get_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_suffix_length_suffix_length_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr);
cparser_result_t cparser_cmd_l3_get_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_get_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_suffix_length_suffix_length_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr);
cparser_result_t cparser_cmd_l3_get_ipuc_ip6uc_pkt_to_cpu_target(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_ipuc_ip6uc_routing_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_urpf_base_selection(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_routing_exception_non_ip_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_routing_exception_ip_ip6_header_error_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_routing_exception_ipuc_bad_sip_bad_dip_zero_sip_dmac_bc_dmac_mc_ttl_fail_mtu_fail_header_opt_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_routing_exception_ip6uc_bad_sip_bad_dip_zero_sip_dmac_mismatch_hbh_err_header_route_hbh_hl_fail_mtu_fail_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_routing_exception_next_hop_age_out_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_get_port_ports_all_ipuc_ip6uc_urpf_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_get_port_ports_all_ipuc_ip6uc_urpf_default_route_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_get_port_ports_all_ipuc_ip6uc_urpf_mode(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_get_port_ports_all_ipuc_ip6uc_urpf_fail_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_key_port_port_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_key_trunk_trunk_id_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_key_vid_vid_vid_mask_vid_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *vid_mask_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_key_mac_addr_mac_mac_addr_mask_mac_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_l3_set_router_mac_entry_index_action_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l3_set_intf_intf_id_mtu_mtu(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l3_set_intf_intf_id_ipv6_mtu_mtu(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l3_set_intf_intf_id_ttl_ttl(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    uint32_t *ttl_ptr);
cparser_result_t cparser_cmd_l3_set_intf_intf_id_ipuc_ip6uc_icmp_redirect_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_set_intf_intf_id_pbr_ipuc_ip6uc_icmp_redirect_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_set_intf_vid_vid_mtu_mtu(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l3_set_intf_vid_vid_ttl_ttl(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *ttl_ptr);
cparser_result_t cparser_cmd_l3_set_next_hop_nh_id_nh_id_intf_intf_id(cparser_context_t *context,
    uint32_t *nh_id_ptr,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_set_next_hop_nh_id_nh_id_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *nh_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_set_next_hop_nh_id_nh_id_action_forward_drop_trap_to_cpu_trap_to_master(cparser_context_t *context,
    uint32_t *nh_id_ptr);
cparser_result_t cparser_cmd_l3_set_host_vrf_id_vrf_id_ip_ip_addr_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_host_vrf_id_vrf_id_ip6_ip6_addr_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_host_age_ip_ip6_clear_hit_bit_remove_unused_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_suffix_length_suffix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_suffix_length_suffix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_set_route_age_ip_ip6_clear_hit_bit_remove_unused_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_ipuc_ip6uc_pkt_to_cpu_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_ipuc_ip6uc_routing_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_urpf_base_selection_intf_based_port_based(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_non_ip_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ip_ip6_header_error_action_drop_trap_to_cpu_trap_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ipuc_bad_sip_bad_dip_zero_sip_dmac_bc_ttl_fail_mtu_fail_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ipuc_dmac_mc_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ipuc_header_opt_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ip6uc_bad_sip_bad_dip_zero_sip_hbh_err_header_route_hbh_hl_fail_mtu_fail_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_ip6uc_dmac_mismatch_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_routing_exception_next_hop_age_out_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_reference_count_check_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_set_port_ports_all_ipuc_ip6uc_urpf_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_set_port_ports_all_ipuc_ip6uc_urpf_default_route_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_set_port_ports_all_ipuc_ip6uc_urpf_mode_loose_strict(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_set_port_ports_all_ipuc_ip6uc_urpf_fail_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l3_create_intf_vid_vid_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_create_intf_vid_vid_mac_addr_mac_addr_flag_flag(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *flag_ptr);
cparser_result_t cparser_cmd_l3_create_intf_intf_id_vid_vid_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_create_intf_intf_id_vid_vid_mac_addr_mac_addr_flag_flag(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *flag_ptr);
cparser_result_t cparser_cmd_l3_create_next_hop_intf_intf_id_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_create_next_hop_intf_intf_id_mac_addr_mac_addr_action_forward_drop_trap_to_cpu_trap_to_master(cparser_context_t *context,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_create_next_hop_nh_id_nh_id_intf_intf_id_mac_addr_mac_addr(cparser_context_t *context,
    uint32_t *nh_id_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_create_next_hop_nh_id_nh_id_intf_intf_id_mac_addr_mac_addr_action_forward_drop_trap_to_cpu_trap_to_master(cparser_context_t *context,
    uint32_t *nh_id_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr);
cparser_result_t cparser_cmd_l3_destroy_intf_intf_id_all(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_destroy_next_hop_nh_id_nh_id(cparser_context_t *context,
    uint32_t *nh_id_ptr);
cparser_result_t cparser_cmd_l3_dump_intf_from_begin_index_begin_to_end_index_end(cparser_context_t *context,
    uint32_t *begin_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_l3_dump_next_hop_from_begin_index_begin_to_end_index_end(cparser_context_t *context,
    uint32_t *begin_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_l3_dump_host_ip_ip6_from_begin_index_begin_to_end_index_end(cparser_context_t *context,
    uint32_t *begin_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_l3_dump_route_ip_ip6_from_begin_index_begin_to_end_index_end(cparser_context_t *context,
    uint32_t *begin_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_l3_add_vrrp_flags_ipv4_ipv6_vid_vid_vrid_vrid(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *vrid_ptr);
cparser_result_t cparser_cmd_l3_add_host_vrf_id_vrf_id_ip_ip_addr_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_host_vrf_id_vrf_id_ip_ip_addr_nexthop_intf_id_mac_addr_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_host_vrf_id_vrf_id_ip6_ip6_addr_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_host_vrf_id_vrf_id_ip6_ip6_addr_nexthop_intf_id_mac_addr_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_nexthop_intf_id_mac_addr_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_suffix_length_suffix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_nexthop_intf_id_mac_addr_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *intf_id_ptr,
    cparser_macaddr_t *mac_addr_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_add_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_suffix_length_suffix_length_path_id_path_id_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_null_intf_ttl_dec_ignore_ttl_chk_ignore_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr,
    uint32_t *path_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l3_del_vrrp_flags_ipv4_ipv6_vid_vid_vrid_vrid(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *vrid_ptr);
cparser_result_t cparser_cmd_l3_del_vrrp_flags_ipv4_ipv6_vid_vid_vrid_all(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l3_del_host_vrf_id_vrf_id_ip_ip_addr(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr);
cparser_result_t cparser_cmd_l3_del_host_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_del_host_vrf_id_vrf_id_ip6_ip6_addr(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr);
cparser_result_t cparser_cmd_l3_del_host_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_del_host_intf_id_intf_id_negate_ip_ip6(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_del_host_all_ip_ip6(cparser_context_t *context);
cparser_result_t cparser_cmd_l3_del_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_del_route_vrf_id_vrf_id_ip_ip_addr_prefix_length_prefix_length_suffix_length_suffix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr);
cparser_result_t cparser_cmd_l3_del_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr);
cparser_result_t cparser_cmd_l3_del_route_vrf_id_vrf_id_ip6_ip6_addr_prefix_length_prefix_length_suffix_length_suffix_length(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **ip6_addr_ptr,
    uint32_t *prefix_length_ptr,
    uint32_t *suffix_length_ptr);
cparser_result_t cparser_cmd_l3_del_route_intf_id_intf_id_negate_ip_ip6(cparser_context_t *context,
    uint32_t *intf_id_ptr);
cparser_result_t cparser_cmd_l3_del_route_all_ip_ip6(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_software_control_port_all_mode(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_led_get_software_control_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_led_get_system_sys_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_system_sys_state(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_blink_time(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_software_control_port_all_entity_entity_media_copper_fiber_mode_off_blink_32_blink_64_blink_128_blink_256_blink_512_blink_1024_continue(cparser_context_t *context,
    char **port_ptr,
    uint32_t *entity_ptr);
cparser_result_t cparser_cmd_led_set_software_control_port_all_entity_entity_state_disable_enable(cparser_context_t *context,
    char **port_ptr,
    uint32_t *entity_ptr);
cparser_result_t cparser_cmd_led_set_software_control_start(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_system_sys_mode_off_blink_64_blink_1024_continue(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_system_sys_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_blink_time_per_32ms_per_64ms_per_128ms_per_256ms_per_512ms_per_1024ms(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_counter_port_ports_all_counter_name(cparser_context_t *context,
    char **ports_ptr,
    char **counter_name_ptr);
cparser_result_t cparser_cmd_mib_get_counter_counter_name(cparser_context_t *context,
    char **counter_name_ptr);
cparser_result_t cparser_cmd_mib_get_tag_length_rx_counter_tx_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_stack_header_length_rx_counter_tx_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_flexible_counter_index_index_packet_length(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_reset_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_reset_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_tag_length_rx_counter_tx_counter_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_stack_header_length_rx_counter_tx_counter_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_flexible_counter_index_index_packet_length_max_min_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_mirror_set_mirror_id_index_type_port_based_rspan_based_flow_based_mirroring_devID_port_ingress_mirrored_ingress_ports_none_egress_mirrored_egress_ports_none_option_igr_and_egr_mirrored_only_original_pkt_duplicate_filter_self_filter_mtp_vlan(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *devID_ptr,
    uint32_t *port_ptr,
    char **ingress_ports_ptr,
    char **egress_ports_ptr);
cparser_result_t cparser_cmd_mirror_set_mirror_id_index_type_port_based_rspan_based_flow_based_mirroring_trunk_group_trunk_id_ingress_mirrored_ingress_ports_none_egress_mirrored_egress_ports_none_option_igr_and_egr_mirrored_only_original_pkt_duplicate_filter_self_filter_mtp_vlan(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr,
    char **ingress_ports_ptr,
    char **egress_ports_ptr);
cparser_result_t cparser_cmd_mirror_set_mirror_id_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mirror_set_queue_id_qid_state_disable_enable(cparser_context_t *context,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_mirror_get_mirror_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mirror_get_queue_id(cparser_context_t *context);
cparser_result_t cparser_cmd_rspan_get_egress_mode_mirror_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rspan_get_ingress_mode_mirror_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rspan_get_tag_mirror_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rspan_set_egress_mode_mirror_id_index_add_tag_no_modify_remove_tag(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rspan_set_tag_mirror_id_index_tpid_vid_pri_cfi(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *tpid_ptr,
    uint32_t *vid_ptr,
    uint32_t *pri_ptr,
    uint32_t *cfi_ptr);
cparser_result_t cparser_cmd_sflow_get_mirror_group_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_sflow_get_sample_control(cparser_context_t *context);
cparser_result_t cparser_cmd_sflow_get_egress_ingress_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_sflow_get_sample_target(cparser_context_t *context);
cparser_result_t cparser_cmd_sflow_set_mirror_group_index_sample_rate(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_sflow_set_sample_control_ingress_egress(cparser_context_t *context);
cparser_result_t cparser_cmd_sflow_set_egress_ingress_port_all_sample_rate(cparser_context_t *context,
    char **port_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_sflow_set_sample_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_cpu_port(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_isolation(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_isolation_vlan_based(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_ability(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_local_ability(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_back_pressure_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_combo_mode_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_combo_fiber_mode_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_green_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_src_port_src_ports(cparser_context_t *context,
    char **src_ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_dev_id_dev_id_src_port_src_ports(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    char **src_ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_based_restrict_route_state(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_vlan_based_egress_port_ports_all_bypass_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_vlan_based_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_port_get_giga_lite_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_2pt5g_lite_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_force_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_link_down_power_saving_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page_register_register(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page_register_register_number_number(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page_register_register_bits_msb_lsb(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_ext_reg_port_ports_all_main_page_mainPage_ext_page_extPage_park_page_parkPage_register_register(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mainPage_ptr,
    uint32_t *extPage_ptr,
    uint32_t *parkPage_ptr,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_port_get_phy_ext_reg_port_ports_all_main_page_mainPage_ext_page_extPage_park_page_parkPage_register_register_number_number(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mainPage_ptr,
    uint32_t *extPage_ptr,
    uint32_t *parkPage_ptr,
    uint32_t *register_ptr,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_port_get_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr);
cparser_result_t cparser_cmd_port_get_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg_brief(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr);
cparser_result_t cparser_cmd_port_get_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg_msb_lsb_brief(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_port_get_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg_number_number(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_port_get_rx_tx_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_fiber_loopback(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_fiber_down_speed(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_fiber_nway_force_link(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_fiber_unidir_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_fiber_rx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_down_speed(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_down_speed_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_phy_loopback(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_phy_mdi_loopback(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_phy_rx_cali_status_serdes_id_sdsId(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_link_media(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_serdes(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_phy_link_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_phy_cnt(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_cross_over_port_ports_all_mode(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_cross_over_port_ports_all_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_master_slave_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_10g_media_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_serdes_test_mode_port_ports_all_serdes_id_sdsId_cnt(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_get_phy_polarity_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_get_phy_eye_monitor_info_port_sdsId_frameNum(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *frameNum_ptr);
cparser_result_t cparser_cmd_port_get_phy_mac_intf_serdes_mode_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_mac_intf_serdes_link_status_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_peer_auto_nego_port_ports_all_ability(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_led_control_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_get_phy_serdes_eye_param_port_ports_all_target_type(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_serdes_leq_port_ports_all_serdes_id_sdsId(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_get_phy_intr_port_ports_all_intr_nway_next_page_recv_an_complete_link_change_aldps_state_change_rlfd_tm_low_tm_high_fatal_err_macsec_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_intr_port_ports_all_intr_common_rlfd_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_intr_port_ports_all_intr_common_rlfd_tm_low_tm_high_macsec_mask(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_congest_time_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_lite_1g_2_5g_5g_10g_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_type_port_ports_all_value(cparser_context_t *context,
    uint32_t *type_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_nbase_t_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_nbase_t_port_ports_all_mask_ieee(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_nbase_t_port_ports_all_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_loopback_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_led_ledid_port_ports_all_mode(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_led_ledid_port_ports_all_active_low(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_led_ledid_port_ports_all_force(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_led_port_ports_all_flash_rate(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_led_port_ports_all_blink_rate(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_preamble_recovery_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_rlfd_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_synce_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_synce_synceid_port_ports_all_clock_freq(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_synce_synceid_port_ports_all_recover_phy(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_synce_synceid_port_ports_all_idle_mode(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_temperature_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_temperature_port_ports_all_threshold(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_serdes_port_ports_all_am_period_usxgmii(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_serdes_port_ports_all_mode(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_serdes_port_ports_all_auto_nego_sgmii_usxgmii_base_x_xsgmii(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_serdes_port_ports_all_polarity(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_fast_retrain_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_fast_retrain_port_ports_all_nfr_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_fast_retrain_port_ports_all_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_snr_threshold_port_ports_all_10g_master_10g_slave_5g_master_5g_slave_2p5g_master_2p5g_slave_1g(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_snr_port_ports_all_ch0_ch1_ch2_ch3(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_skew_port_ports_all_b_c_d(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_mdi_port_ports_all_swap(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_mdi_port_ports_all_inverse(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_role(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_tx_imbal(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_rx_imbal(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_tod_delay(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_duration_th(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_clock_src(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_pll_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_pll_power_src(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_ptp_port_ports_all_pll_clk_freq(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_debug_port_ports_all_mdi_plug(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_debug_port_ports_all_mdio_parity_chk(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_linkdown_cnt_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_fatal_status_port_ports_all_clear(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_macsec_port_ports_all_bypass(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_eee_phymode_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phyctrl_cable_length_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_ipg_shrink_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_ipg_stk_mode_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_sds_reg_port_ports_all_sds_page_sds_page_sds_reg_sds_reg(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sds_page_ptr,
    uint32_t *sds_reg_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_reg_tx_rx_reg(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *reg_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_cfg(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_txsc_sc_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_rxsc_txsc_sc_id_hwstatus(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_rxsc_sc_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_counter(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_counter_rxsa_txsa_sc_sc_id_an_an(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr);
cparser_result_t cparser_cmd_port_get_macsec_port_ports_all_intr_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_ability_10h_10f_100h_100f_1000f_2_5g_5g_10gbase_t_flow_control_asy_flow_control(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_lite_ability_1g_2_5g_5g_10g(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_back_pressure_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_combo_mode_port_ports_all_copper_force_fiber_force(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_combo_fiber_mode_port_ports_all_fiber_1000_fiber_100_fiber_auto(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_force_port_ports_all_ability_10h_10f_100h_100f_1000f_2_5g_5g_10000f(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_force_port_ports_all_flow_control_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_force_port_ports_all_flow_control_tx_pause_disable_enable_rx_pause_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_green_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_src_port_src_ports_dst_port_dst_ports_all(cparser_context_t *context,
    char **src_ports_ptr,
    char **dst_ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_dev_id_dev_id_src_port_src_ports_dst_port_dst_ports_all(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    char **src_ports_ptr,
    char **dst_ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_based_restrict_route_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_vlan_based_entry_index_trust_port_ports_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_vlan_based_entry_index_vid_lower_upper_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *lower_ptr,
    uint32_t *upper_ptr);
cparser_result_t cparser_cmd_port_set_isolation_vlan_based_egress_port_ports_all_bypass_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_link_down_power_saving_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_port_set_giga_lite_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_2pt5g_lite_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_reg_port_ports_all_page_page_register_register_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_phy_reg_port_ports_all_page_page_register_register_bits_msb_lsb_value(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_port_set_phy_ext_reg_port_ports_all_main_page_mainPage_ext_page_extPage_park_page_parkPage_register_register_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mainPage_ptr,
    uint32_t *extPage_ptr,
    uint32_t *parkPage_ptr,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_phy_mmd_reg_port_ports_all_mmd_addr_mmd_addr_mmd_reg_mmd_reg_msb_lsb_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *mmd_addr_ptr,
    uint32_t *mmd_reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_rx_tx_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_loopback_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_down_speed_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_nway_force_link_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_unidir_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_oam_loopback_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_rx_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_fiber_tx_enable_disable_output_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_down_speed_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_phy_loopback_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_phy_mdi_loopback_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_serdes_sgmii_1000bx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_phy_cnt_clear(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_cross_over_port_ports_all_mode_auto_mdi_mdix(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_master_slave_port_ports_all_auto_master_slave(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_10g_media_port_ports_all_fiber10g_fiber1g_dac50cm_dac100cm_dac300cm_dac500cm_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_10g_media_port_ports_all_fiber100m_fiber2_5g(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_test_mode_port_port_mode_mode_channel_a_b_c_d_none_all_phy_ports(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *mode_ptr);
cparser_result_t cparser_cmd_port_set_phy_test_mode_port_port_10g_mode_1_2_3_4_1_4_2_4_4_4_5_4_6_5_6_7_none(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_test_mode_port_port_10g_mode_1_2_3_4_1_4_2_4_4_4_5_4_6_5_6_7_none_channel_a_b_c_d_none(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_test_mode_port_port_1g_mode_1_2_3_4_none(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_test_mode_port_port_100m_mode_ieee_ansi_jitter_ansi_droop_none(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_test_mode_port_ports_all_serdes_id_sdsId_pattern_disable_prbs7_prbs9_prbs10_prbs11_prbs15_prbs20_prbs23_prbs31_8180(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_set_phy_polarity_port_port_tx_normal_inverse(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_polarity_port_port_rx_normal_inverse(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_port_set_phy_eye_monitor_port_sdsId_frameNum(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *frameNum_ptr);
cparser_result_t cparser_cmd_port_set_phy_led_mode_port_ports_all_led_id_mdi_mdi_led_indicator_1000M_speed_100M_speed_10M_speed_1000M_act_100M_act_10M_act_duplex_collision_tx_act_rx_act(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *id_ptr,
    uint32_t *mdi_ptr);
cparser_result_t cparser_cmd_port_set_phy_led_control_port_ports_all_blink_rate_32ms_48ms_64ms_96ms_128ms_256ms_512ms_1024ms(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_led_control_port_ports_all_burst_cycle_8ms_16ms_32ms_64ms(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_led_control_port_ports_all_clock_cycle_32ns_64ns_96ns_192ns(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_led_control_port_ports_all_active_high_low(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_target_type_default_5gr_5gx_2p5gx_1gx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_main_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_pre_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_post_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_post2_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_pre_amp_pre_amp(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *pre_amp_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_main_amp_main_amp(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *main_amp_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_post_amp_post_amp(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *post_amp_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_post2_amp_post_amp(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *post_amp_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_eye_param_port_ports_all_serdes_id_sdsId_impedance_impedance(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *impedance_ptr);
cparser_result_t cparser_cmd_port_set_phy_serdes_leq_port_ports_all_serdes_id_sdsId_manual_enable_disable_manual_leq(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sdsId_ptr,
    uint32_t *manual_leq_ptr);
cparser_result_t cparser_cmd_port_set_phy_intr_port_ports_all_intr_common_rlfd_init(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_intr_port_ports_all_intr_common_rlfd_tm_low_tm_high_macsec_mask_value(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_port_set_phy_intr_port_ports_all_intr_nway_next_page_recv_an_complete_link_change_aldps_state_change_rlfd_tm_low_tm_high_fatal_err_macsec_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_congest_time_port_ports_all_time_time(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_port_set_lite_1g_2_5g_5g_10g_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_type_port_ports_all_value_val(cparser_context_t *context,
    uint32_t *type_ptr,
    char **ports_ptr,
    uint32_t *val_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_nbase_t_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_nbase_t_port_ports_all_mask_ieee_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_loopback_pma_remote_serdes_remote_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_preamble_recovery_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_led_ledid_port_ports_all_mode_modebitmap(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr,
    uint32_t *modebitmap_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_led_ledid_port_ports_all_active_low_disable_enable(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_led_ledid_port_ports_all_force_disable_off_on_blink_flash(cparser_context_t *context,
    uint32_t *ledid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_led_port_ports_all_flash_rate_128ms_256ms_512ms_1024ms(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_led_port_ports_all_blink_rate_32ms_64ms_128ms_256ms(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_rlfd_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_synce_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_synce_port_ports_all_source_pll_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_synce_synceid_port_ports_all_clock_freq_50mhz_25mhz_8khz(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_synce_synceid_port_ports_all_recover_phy_0_1_2_3(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_synce_synceid_port_ports_all_idle_mode_local_free_run_high_low(cparser_context_t *context,
    uint32_t *synceid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_temperature_port_ports_all_threshold_high_low_higher_lower_degree(cparser_context_t *context,
    char **ports_ptr,
    int32_t *degree_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_fast_retrain_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_fast_retrain_port_ports_all_nfr_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_serdes_port_ports_all_mode_modeVal(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *modeVal_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_serdes_port_ports_all_update(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_serdes_port_ports_all_auto_nego_sgmii_usxgmii_base_x_xsgmii_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_serdes_port_ports_all_polarity_tx_rx_normal_inverse(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_serdes_port_ports_all_am_period_usxgmii_value(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_snr_threshold_port_ports_all_10g_master_10g_slave_5g_master_5g_slave_2p5g_master_2p5g_slave_1g_snr_value(cparser_context_t *context,
    char **ports_ptr,
    double *snr_value_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_reinit_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_rtct_cable_port_ports_all_cat5e_cat6a_cat6a_uu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_mdi_port_ports_all_swap_pairbitmap(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *pairbitmap_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_mdi_port_ports_all_inverse_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_role_none_bc_tc_e2e_tc_p2p_tc(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_tx_imbal_imbal(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *imbal_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_rx_imbal_imbal(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *imbal_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_tod_delay_delay(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *delay_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_duration_th_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_clock_src_external_internal(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_pll_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_pll_power_src_ldo_external(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_ptp_port_ports_all_pll_clk_freq_25mhz_50mhz_125mhz(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_macsec_port_ports_all_bypass_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phyctrl_eee_phymode_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_ipg_shrink_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_ipg_stk_mode_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_sds_reg_port_ports_all_sds_page_sds_page_sds_reg_sds_reg_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sds_page_ptr,
    uint32_t *sds_reg_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_reg_tx_rx_reg_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *reg_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_drop_kay_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_xpn_intr_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *threshold_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_pn_intr_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an_activate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_rxsa_sc_sc_id_an_an_disable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_txsa_sc_sc_id_disable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_counter_reset(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_macsec_port_ports_all_nm_validate_strict_check_off(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_add_isolation_src_port_src_port_dst_port_dst_port(cparser_context_t *context,
    uint32_t *src_port_ptr,
    uint32_t *dst_port_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_txsc_sci_aes_pn128_pn256_xpn128_xpn256_protect_frame_include_sci_use_es_use_scb_conf_protect(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *sci_ptr,
    uint32_t *protect_frame_ptr,
    uint32_t *include_sci_ptr,
    uint32_t *use_es_ptr,
    uint32_t *use_scb_ptr,
    uint32_t *conf_protect_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_txsc_sci_aes_pn128_pn256_xpn128_xpn256_protect_frame_include_sci_use_es_use_scb_conf_protect_match_da_addr(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *sci_ptr,
    uint32_t *protect_frame_ptr,
    uint32_t *include_sci_ptr,
    uint32_t *use_es_ptr,
    uint32_t *use_scb_ptr,
    uint32_t *conf_protect_ptr,
    cparser_macaddr_t *addr_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsc_sci_aes_pn128_pn256_xpn128_xpn256_validate_strict_check_off_replay_protect_replay_window(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *sci_ptr,
    uint32_t *replay_protect_ptr,
    uint32_t *replay_window_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsc_sci_aes_pn128_pn256_xpn128_xpn256_validate_strict_check_off_replay_protect_replay_window_match_sa_addr(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *sci_ptr,
    uint32_t *replay_protect_ptr,
    uint32_t *replay_window_ptr,
    cparser_macaddr_t *addr_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an_aes128_key_key_p0_key_p1_pn_pn(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr,
    uint64_t *key_p0_ptr,
    uint64_t *key_p1_ptr,
    uint32_t *pn_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an_aes128_key_key_p0_key_p1_xpn_xpn_salt_salt_p0_salt_p1_salt_p2_ssci_ssci(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr,
    uint64_t *key_p0_ptr,
    uint64_t *key_p1_ptr,
    uint64_t *xpn_ptr,
    uint32_t *salt_p0_ptr,
    uint32_t *salt_p1_ptr,
    uint32_t *salt_p2_ptr,
    uint32_t *ssci_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an_aes256_key_key_p0_key_p1_key_p2_key_p3_pn_pn(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr,
    uint64_t *key_p0_ptr,
    uint64_t *key_p1_ptr,
    uint64_t *key_p2_ptr,
    uint64_t *key_p3_ptr,
    uint32_t *pn_ptr);
cparser_result_t cparser_cmd_port_add_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an_aes256_key_key_p0_key_p1_key_p2_key_p3_xpn_xpn_salt_salt_p0_salt_p1_salt_p2_ssci_ssci(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr,
    uint64_t *key_p0_ptr,
    uint64_t *key_p1_ptr,
    uint64_t *key_p2_ptr,
    uint64_t *key_p3_ptr,
    uint64_t *xpn_ptr,
    uint32_t *salt_p0_ptr,
    uint32_t *salt_p1_ptr,
    uint32_t *salt_p2_ptr,
    uint32_t *ssci_ptr);
cparser_result_t cparser_cmd_port_del_isolation_src_port_src_port_dst_port_dst_port(cparser_context_t *context,
    uint32_t *src_port_ptr,
    uint32_t *dst_port_ptr);
cparser_result_t cparser_cmd_port_del_macsec_port_ports_all_txsc_sc_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_del_macsec_port_ports_all_rxsc_sc_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr);
cparser_result_t cparser_cmd_port_del_macsec_port_ports_all_rxsa_txsa_sc_sc_id_an_an(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sc_id_ptr,
    uint32_t *an_ptr);
cparser_result_t cparser_cmd_port_reset_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_avb_port_ports_all_sr_class_a_sr_class_b_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_avb_sr_class_a_sr_class_b_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_avb_sr_class_a_sr_class_b_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_qos_set_avb_non_sr_class_a_non_sr_class_b_redirect_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_qos_set_avb_non_sr_class_a_non_sr_class_b_remark_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_drop_precedence_selector_port_ports_all_dscp_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_drop_precedence_selector_port_ports_all_inner_tag_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_drop_precedence_selector_port_ports_all_outer_tag_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_port_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_dscp_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_inner_tag_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_outer_tag_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_vlan_acl_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_mac_based_vlan_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_protocol_based_vlan_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_routing_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_port_ports_all_group_id_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_set_priority_to_queue_priority_priority_queue_id_qid(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_port_ports_all_internal_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_inner_tag_system_inner_priority_inner_priority_internal_priority_internal_priority(cparser_context_t *context,
    uint32_t *inner_priority_ptr,
    uint32_t *internal_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_inner_tag_system_dei_dei_priority_priority_drop_precedence_drop_precedence(cparser_context_t *context,
    uint32_t *dei_ptr,
    uint32_t *priority_ptr,
    uint32_t *drop_precedence_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_inner_tag_system_dei_dei_priority_priority_internal_priority_internal_priority(cparser_context_t *context,
    uint32_t *dei_ptr,
    uint32_t *priority_ptr,
    uint32_t *internal_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dscp_system_dscp_dscp_drop_precedence_drop_precedence(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *drop_precedence_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dscp_system_dscp_dscp_internal_priority_priority(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_outer_tag_system_dei_dei_priority_priority_drop_precedence_drop_precedence(cparser_context_t *context,
    uint32_t *dei_ptr,
    uint32_t *priority_ptr,
    uint32_t *drop_precedence_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_outer_tag_system_dei_dei_priority_priority_internal_priority_internal_priority(cparser_context_t *context,
    uint32_t *dei_ptr,
    uint32_t *priority_ptr,
    uint32_t *internal_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_port_priority_remap_port_ports_all_table_selector_inner_priority_remap_table_outer_priority_remap_table(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_port_priority_remap_system_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remapping_port_priority_remap_system_table_selector_inner_priority_dei0_remap_table_outer_priority_dei0_remap_table(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remapping_mac_based_vlan_priority_remap_system_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remapping_protocol_based_vlan_priority_remap_system_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dei_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dei_system_drop_precedence_drop_precedence_dei_dei(cparser_context_t *context,
    uint32_t *drop_precedence_ptr,
    uint32_t *dei_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dei_system_internal_priority_priority_dei_dei(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dei_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dei_system_source_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dei_system_source_drop_precedence(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dei_tag_selector_port_ports_all_inner_tag_outer_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_dscp_dscp_remark_inner_priority_remark_inner_priority(cparser_context_t *context,
    uint32_t *dscp_ptr,
    uint32_t *remark_inner_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_inner_priority_inner_priority_remark_inner_priority_remark_inner_priority(cparser_context_t *context,
    uint32_t *inner_priority_ptr,
    uint32_t *remark_inner_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_outer_priority_outer_priority_remark_inner_priority_remark_inner_priority(cparser_context_t *context,
    uint32_t *outer_priority_ptr,
    uint32_t *remark_inner_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_internal_priority_internal_priority_remark_inner_priority_remark_inner_priority(cparser_context_t *context,
    uint32_t *internal_priority_ptr,
    uint32_t *remark_inner_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_source_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_source_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_source_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_inner_tag_system_source_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_inner_tag_outer_tag_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_drop_precedence(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_source_drop_precedence_and_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_inner_priority_priority_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_internal_priority_priority_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_outer_priority_priority_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_dscp_dscp_remark_dscp_remark_dscp(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_system_drop_precedence_precedence_internal_priority_priority_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *precedence_ptr,
    uint32_t *priority_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_source_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_source_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_source_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_source_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_dscp_dscp_remark_outer_priority_remark_outer_priority(cparser_context_t *context,
    uint32_t *dscp_ptr,
    uint32_t *remark_outer_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_inner_priority_inner_priority_remark_outer_priority_remark_outer_priority(cparser_context_t *context,
    uint32_t *inner_priority_ptr,
    uint32_t *remark_outer_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_outer_priority_outer_priority_remark_outer_priority_remark_outer_priority(cparser_context_t *context,
    uint32_t *outer_priority_ptr,
    uint32_t *remark_outer_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_outer_tag_system_internal_priority_internal_priority_remark_outer_priority_remark_outer_priority(cparser_context_t *context,
    uint32_t *internal_priority_ptr,
    uint32_t *remark_outer_priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_system_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_system_config_source_egress_ingress(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_port_ports_all_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_port_ports_all_source_copy_default_inner_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_port_ports_all_source_copy_internal_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_dev_devID_port_ports_all_priority_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_dev_devID_port_ports_all_source_copy_default_inner_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_inner_tag_dev_devID_port_ports_all_source_copy_internal_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_port_ports_all_source_copy_inner_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_port_ports_all_source_copy_internal_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_port_ports_all_source_copy_default_outer_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_port_ports_all_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_dev_devID_port_ports_all_source_copy_inner_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_dev_devID_port_ports_all_source_copy_internal_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_dev_devID_port_ports_all_source_copy_default_outer_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_dev_devID_port_ports_all_priority_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_system_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_default_priority_outer_tag_system_config_source_egress_ingress(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_scheduling_algorithm_port_ports_all_wrr_wfq(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_queue_weight_port_ports_all_queue_id_qid_weight_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_egress_strict_priority_port_ports_all_queue_id_qid_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_invalid_dscp_value_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_qos_set_invalid_dscp_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_cpu_queue_to_stack_queue_cpu_queue_id_cpu_qid_queue_id_stack_qid(cparser_context_t *context,
    uint32_t *cpu_qid_ptr,
    uint32_t *stack_qid_ptr);
cparser_result_t cparser_cmd_qos_set_cpu_queue_to_normal_queue_cpu_queue_id_cpu_qid_queue_id_normal_qid(cparser_context_t *context,
    uint32_t *cpu_qid_ptr,
    uint32_t *normal_qid_ptr);
cparser_result_t cparser_cmd_qos_get_drop_precedence_selector_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_avb_port_ports_all_sr_class_a_sr_class_b_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_avb_sr_class_a_sr_class_b_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_avb_sr_class_a_sr_class_b_queue_id(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_avb_non_sr_class_a_non_sr_class_b_redirect_queue_id(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_avb_non_sr_class_a_non_sr_class_b_remark_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_selector_group_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_get_priority_selector_port_ports_all_group_id(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_priority_to_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remapping_inner_tag_system(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_dscp_system(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_outer_tag_system(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_port_priority_remap_port_ports_all_table_selector(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remapping_port_priority_remap_system_state(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_port_priority_remap_system_table_selector(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_mac_based_vlan_priority_remap_system_state(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_protocol_based_vlan_priority_remap_system_state(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dei_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dei_system_drop_precedence(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dei_system_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dei_system_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dei_tag_selector_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_inner_tag_system_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_inner_tag_system_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_inner_tag_system_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_inner_tag_system_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_inner_tag_system_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_inner_tag_outer_tag_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_system_drop_precedence_and_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_outer_tag_system_inner_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_outer_tag_system_outer_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_outer_tag_system_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_outer_tag_system_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_outer_tag_system_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_system_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_system_config_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_port_ports_all_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_port_ports_all_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_dev_devID_port_ports_all_source(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_inner_tag_dev_devID_port_ports_all_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_port_ports_all_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_port_ports_all_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_dev_devID_port_ports_all_source(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_dev_devID_port_ports_all_priority(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_system_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_default_priority_outer_tag_system_config_source(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_scheduling_algorithm_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_queue_weight_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_egress_strict_priority_port_ports_all_queue_id_qid_state(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_get_invalid_dscp_value(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_invalid_dscp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_cpu_queue_to_stack_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_cpu_queue_to_normal_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_cpu_counting_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all_queue_queue_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_burst_size(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_assured_bandwidth_port_ports_all_queue_queue_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_low_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_bypass_packet_arp_request_rma_bpdu_rtk_ctrl_pkt_igmp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_bypass_packet_rip_dhcp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_burst_size(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_queue_burst_size(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_egress_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_egress_burst_size_size(cparser_context_t *context,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_cpu_counting_mode_byte_packet(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_burst_size_size(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_queue_id_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_queue_id_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_queue_id_burst_size_size(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_assured_bandwidth_port_ports_all_queue_queue_id_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_assured_bandwidth_port_ports_all_queue_queue_id_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_assured_bandwidth_port_ports_all_queue_queue_id_burst_size_size(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_assured_bandwidth_port_ports_all_queue_queue_id_mode_shared_bandwidth_fixed_bandwidth(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_low_threshold_thresh(cparser_context_t *context,
    uint32_t *thresh_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_burst_size_size(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_low_burst_size_low_high_burst_size_high(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *low_ptr,
    uint32_t *high_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_bypass_packet_arp_request_rma_bpdu_rtk_ctrl_pkt_igmp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_ingress_bypass_packet_rip_dhcp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_ingress_burst_size_size(cparser_context_t *context,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_queue_burst_size_size(cparser_context_t *context,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_bandwidth_reset_ingress_meter_exceed_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_storm_control_get_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_port_port_all_counting_mode(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unicast_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_get_bypass_packet_arp_request_bpdu_igmp_rma_rtk_ctrl_pkt_dhcp_rip_ospf_state(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_proto_storm_arp_request_bpdu_igmp_dhcp_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_get_proto_storm_arp_request_dhcp_vlan_constrt_state(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_counting_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_port_port_all_counting_mode_byte_packet(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unicast_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unicast_port_port_all_rate_rate(cparser_context_t *context,
    char **port_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unicast_port_port_all_burst_size_size(cparser_context_t *context,
    char **port_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_storm_control_set_unicast_multicast_port_port_all_type_unknown_only_both(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unicast_burst_size_size(cparser_context_t *context,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_storm_control_set_bypass_packet_arp_request_bpdu_igmp_rma_rtk_ctrl_pkt_dhcp_rip_ospf_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_proto_storm_arp_request_bpdu_igmp_dhcp_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_set_proto_storm_arp_request_bpdu_igmp_dhcp_port_port_all_rate_rate(cparser_context_t *context,
    char **port_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_storm_control_set_proto_storm_arp_request_bpdu_igmp_dhcp_port_port_all_burst_size_size(cparser_context_t *context,
    char **port_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_storm_control_set_proto_storm_arp_request_dhcp_vlan_constrt_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_counting_mode_byte_packet(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_reset_meter_exceed_broadcast_multicast_unicast_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_storm_control_reset_proto_storm_meter_exceed_arp_request_bpdu_igmp_dhcp_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_register_get_all(cparser_context_t *context);
cparser_result_t cparser_cmd_register_get_address_words(cparser_context_t *context,
    char **address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_register_set_address_value(cparser_context_t *context,
    char **address_ptr,
    char **value_ptr);
cparser_result_t cparser_cmd_register_modify_reg_name_field_val_pairs(cparser_context_t *context,
    char **reg_name_ptr,
    char **field_val_pairs_ptr);
cparser_result_t cparser_cmd_register_list_key_word(cparser_context_t *context,
    char **key_word_ptr);
cparser_result_t cparser_cmd_vlan_create_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_destroy_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_destroy_all_restore_default_vlan(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_msti_msti(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *msti_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_untag_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_groupmask_group_msk(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *group_msk_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_profile_index_index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_hash_mode_ivl_unicast_multicast_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_hash_mode_svl_unicast_multicast_fid_fid(cparser_context_t *context,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_hash_mode_svl_unicast_multicast_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_accept_frame_type_inner_port_ports_all_all_tag_only_untag_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_accept_frame_type_outer_port_ports_all_all_tag_only_untag_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_filter_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_leaky_multicast_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_leaky_stp_filter_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_pvid_inner_port_ports_all_pvid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *pvid_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_outer_port_ports_all_pvid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *pvid_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_group_index_frame_type_unknown_ethernet_snap_llc_other_frame_value_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_port_ports_all_group_index_vlan_type_inner_outer_vid_vid_state_disable_enable_priority_priority_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_port_ports_all_extra_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_port_ports_all_inner_outer_tpid_tpid_idx_mask(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *tpid_idx_mask_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_port_ports_all_inner_outer_keep_tag_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_port_ports_all_fwd_vlan_tag_mode_untag_inner_tag_outer_tag_double_tag_all_by_inner_outer(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_ports_all_inner_outer_tpid_tpid_idx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *tpid_idx_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_ports_all_inner_outer_keep_tag_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_ports_all_inner_outer_status_untag_priority_tag_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_ports_all_inner_outer_status_internal(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_sa_learning_state_asic_learn_software_learn_not_learn(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_src_mac_action_forward_drop_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipuc_ip6uc_ipmc_ip6mc_routing_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipuc_ip6uc_urpf_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipuc_ip6uc_urpf_default_route_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipuc_ip6uc_urpf_mode_loose_strict(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipuc_ip6uc_urpf_fail_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipmc_ip6mc_mc_bridge_mode_mac_base_ip_base(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ipmc_dip_224_0_0_x_224_0_1_x_239_x_x_x_action_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_ip6mc_dip_xxxx_0000_00xx_ff0x_xxxx_xxxx_ff0x_db8_0_0_action_forward_flood_in_vlan_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_lookup_miss_type_l2_mcast_ip4_mcast_ip6_mcast_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_profile_entry_index_lookup_miss_type_l2_mcast_ip4_mcast_ip6_mcast_port_ports_all(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_filter_port_ports_all_action_forward_drop_trap(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_mode_inner_outer_port_ports_all_all_untag_only_untag_and_priority_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_key_port_port_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_key_trunk_trunk_id_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_key_inner_outer_frame_type_all_tagged_untagged(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_key_mac_address_mac_mac_mask_msk(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *msk_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_data_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_bypass_ingress_vlan_filter(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_data_fwd_action_trap_to_master_copy_to_master_bypass_ingress_vlan_filter(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_data_vlan_type_inner_outer_vid_vid_state_disable_enable_priority_priority_state_disable_enable_tpid_tpid_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_entry_index_data_vlan_tag_status_untag_tag_none(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_mac_based_vlan_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_key_port_port_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_key_trunk_trunk_id_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_key_inner_outer_frame_type_all_tagged_untagged(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_key_src_ip_sip_src_ip_mask_sipmsk(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *sip_ptr,
    uint32_t *sipmsk_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_data_fwd_action_drop_forward_trap_to_cpu_copy_to_cpu_bypass_ingress_vlan_filter(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_data_fwd_action_trap_to_master_copy_to_master_bypass_ingress_vlan_filter(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_data_vlan_type_inner_outer_vid_vid_state_disable_enable_priority_priority_state_disable_enable_tpid_tpid_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_entry_index_data_vlan_tag_status_untag_tag_none(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ip_subnet_based_vlan_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_block_mode_index_conversion_mac_based_ip_subnet_based(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_inner_outer_vid_vid_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_inner_outer_priority_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_inner_outer_tag_status_all_tagged_untagged(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_range_check_range_check_bitmask_mask_range_check_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *range_check_bitmask_ptr,
    uint32_t *range_check_mask_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_port_port_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_key_trunk_trunk_id_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_inner_vid_vid_force_shift_copy_from_outer_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_outer_vid_vid_force_shift_copy_from_inner_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_inner_priority_priority_force_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_outer_priority_priority_force_copy_from_inner_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_status_inner_outer_untag_tag_none(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_entry_index_data_inner_outer_tpid_tpid_index_force_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_port_ports_all_range_check_set_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *set_id_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_port_ports_all_inner_outer_lookup_miss_action_forward_drop(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_ingress_range_check_set_id_entry_index_vid_inner_outer_lower_upper(cparser_context_t *context,
    uint32_t *set_id_ptr,
    uint32_t *entry_index_ptr,
    uint32_t *lower_ptr,
    uint32_t *upper_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_inner_outer_vid_vid_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_inner_outer_priority_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_inner_outer_tag_status_all_tagged_untagged(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_range_check_range_check_bitmask_mask_range_check_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *range_check_bitmask_ptr,
    uint32_t *range_check_mask_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_port_port_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_key_trunk_trunk_id_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_inner_vid_vid_force_shift_copy_from_outer_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_outer_vid_vid_force_shift_copy_from_inner_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_inner_priority_priority_force_copy_from_outer_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_outer_priority_priority_force_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_status_inner_outer_untag_tag_none(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_entry_index_data_inner_outer_tpid_tpid_index_force_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *tpid_index_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_port_ports_all_range_check_set_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *set_id_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_port_ports_all_inner_outer_lookup_miss_action_forward_drop(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_conversion_egress_range_check_set_id_entry_index_vid_inner_outer_lower_upper(cparser_context_t *context,
    uint32_t *set_id_ptr,
    uint32_t *entry_index_ptr,
    uint32_t *lower_ptr,
    uint32_t *upper_ptr);
cparser_result_t cparser_cmd_vlan_set_tpid_inner_outer_extra_entry_tpid_idx_tpid_tpid(cparser_context_t *context,
    uint32_t *tpid_idx_ptr,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_port_ports_all_vid_source_inner_outer(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_port_ports_all_pri_tag_vid_source_priority_vid_port_based_vid(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_trunk_trunks_all_state_disable_enable(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_trunk_trunks_all_vid_source_inner_outer(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_aggregation_trunk_trunks_all_pri_tag_vid_source_priority_vid_port_based_vid(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipuc_ip6uc_ipmc_ip6mc_routing_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipuc_ip6uc_urpf_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipuc_ip6uc_urpf_default_route_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipuc_ip6uc_urpf_mode(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipuc_ip6uc_urpf_fail_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipmc_ip6mc_mc_bridge_mode(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ipmc_dip_224_0_0_x_224_0_1_x_239_x_x_x_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_ip6mc_dip_xxxx_0000_00xx_ff0x_xxxx_xxxx_ff0x_db8_0_0_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_lookup_miss_type_l2_mcast_ip4_mcast_ip6_mcast_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index_lookup_miss_type_l2_mcast_ip4_mcast_ip6_mcast_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_profile_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_egress_port_ports_all_range_check(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_port_ports_all_lookup_miss_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_entry_index_hit_indication_hit_clear(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_block_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_ingress_range_check_set_id_entry_index_vid(cparser_context_t *context,
    uint32_t *set_id_ptr,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_egress_port_ports_all_lookup_miss_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_egress_entry_index_hit_indication_hit_clear(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_egress_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_conversion_egress_range_check_set_id_entry_index_vid(cparser_context_t *context,
    uint32_t *set_id_ptr,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_vlan_get_leaky_stp_filter_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_leaky_multicast_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_table_hash_mode_unicast_multicast_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_get_accept_frame_type_inner_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_accept_frame_type_outer_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_egress_filter_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_inner_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_outer_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_group_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ingress_filter_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_mode_inner_outer_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_mac_based_vlan_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_mac_based_vlan_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ip_subnet_based_vlan_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_ip_subnet_based_vlan_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_tpid_inner_outer_extra(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_port_ports_all_vid_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_port_ports_all_pri_tag_vid_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_trunk_trunks_all_state(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_trunk_trunks_all_vid_source(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_aggregation_trunk_trunks_all_pri_tag_vid_source(cparser_context_t *context,
    char **trunks_ptr);
cparser_result_t cparser_cmd_vlan_add_mac_based_vlan_entry_mac_address_mac_vid_vid_priority_priority(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_add_ip_subnet_based_vlan_entry_src_ip_sip_src_ip_mask_sipmask_vid_vid_priority_priority(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sipmask_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_del_mac_based_vlan_entry_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_vlan_del_ip_subnet_based_vlan_entry_src_ip_sip_src_ip_mask_sipmask(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sipmask_ptr);
cparser_result_t cparser_cmd_vlan_clear_vlan_conversion_egress_entry_index_all(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_clear_vlan_conversion_ingress_entry_index_all(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_dump_ingress_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_security_get_arp_validation_port_all_action(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_get_attack_prevent(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_get_max_ping_min_ipv6_frag_min_tcp_header_smurf_netmask(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_trap_target(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_arp_validation_port_all_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_daeqsa_deny_icmp_frag_pkts_deny_icmpv4_ping_max_check_icmpv6_ping_max_check_ipv6_min_frag_size_check_land_deny_nullscan_deny_pod_deny_smurf_deny_syn_sportl1024_deny_synfin_deny_synrst_deny_tcp_frag_off_min_check_tcpblat_deny_tcphdr_min_check_udpblat_deny_xma_deny_action_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_ip4_invalid_len_action_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_max_ping_min_ipv6_frag_min_tcp_header_smurf_netmask_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_security_set_trap_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_stp_create_instance(cparser_context_t *context,
    uint32_t *instance_ptr);
cparser_result_t cparser_cmd_stp_destroy_instance(cparser_context_t *context,
    uint32_t *instance_ptr);
cparser_result_t cparser_cmd_stp_get_instance(cparser_context_t *context,
    uint32_t *instance_ptr);
cparser_result_t cparser_cmd_stp_get_msti_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_stp_dump_instance_port_all(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **port_ptr);
cparser_result_t cparser_cmd_stp_set_instance_port_all_blocking_disable_forwarding_learning(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **port_ptr);
cparser_result_t cparser_cmd_stp_set_msti_mode_normal_cist(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_chksum_err_type_l2_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_crc_recal_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_dev_capabilities(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_mac_address(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_oui_00_00_00_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_cpu_max_pkt_len_rx_dir_tx_dir_length(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_port_ports_all_fe_ge_length(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_port_ports_all_tag_length_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_probe_information(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_sdk_version(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_watchdog_scale_bits(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_watchdog_phase_1_phase_2_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_watchdog_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_pppoe_ip_parse_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_pkt2cpu_forward_trap_format(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_pkt2cpu_vlan_format(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_cpu_packet_truncate_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_cpu_packet_truncate_len(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_watchdog_phase_1_phase_2_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_switch_set_watchdog_scale_bits_25_26_27_28(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_watchdog_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_chksum_err_type_l2_port_ports_all_action_drop_forward(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_crc_recal_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_switch_set_oui_00_00_00_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_cpu_max_pkt_len_rx_dir_tx_dir_length_len(cparser_context_t *context,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_port_ports_all_fe_ge_length_len(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_port_ports_all_tag_length_state_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_pkt2cpu_forward_trap_format_modified_original(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_pkt2cpu_vlan_format_modified_original(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_pppoe_ip_parse_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_cpu_packet_truncate_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_cpu_packet_truncate_len_len(cparser_context_t *context,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_kick_watchdog(cparser_context_t *context);
cparser_result_t cparser_cmd_sys_dump_hwp_all_info_unit_parsed_info(cparser_context_t *context);
cparser_result_t cparser_cmd_sys_load_port_config_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_sys_command_cmd(cparser_context_t *context,
    char **cmd_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_time_stamp_rx_message_type_delay_request_peer_delay_request_peer_delay_response_sync_sequence_id_sequence_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sequence_id_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_time_stamp_tx_message_type_delay_request_peer_delay_request_peer_delay_response_sync_sequence_id_sequence_id(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *sequence_id_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_mac_address(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_mac_address_range(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_tpid_outer_inner(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_time_op(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_latch_time(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_reference_time_frequency(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_tx_interrupt_status(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_interrupt_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_tx_timstamp_fifo(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_1PPS_output(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_clock_output(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_output_signal_selection(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_transparent_clock(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_port_ports_all_link_delay(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_reference_time(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_reference_time_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_reference_time_state(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_reference_time_frequency(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_correct_field_trans_val_correct_field_ori_cf_second_second_nanosecond_nanosecond(cparser_context_t *context,
    uint64_t *ori_cf_ptr,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_get_full_sec_port_ports_all_second_second_len_bits(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *second_ptr,
    uint32_t *bits_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_mac_address_mac(cparser_context_t *context,
    char **ports_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_mac_address_range_range(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *range_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_tpid_outer_inner_entry_tpid_idx_tpid_tpid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *tpid_idx_ptr,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_time_op_start_stop_latch_exec_freq_apply_rise_tri_enable_disable_fall_tri_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_reference_time_frequency_freqVal_apply_applyVal(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *freqVal_ptr,
    uint32_t *applyVal_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_interrupt_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_1PPS_output_pulse_width_pulseWidthVal_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *pulseWidthVal_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_clock_output_mode_repeat_pulse_start_time_sec_sec_nsec_nsec_half_period_halfPeriodNsec_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *sec_ptr,
    uint32_t *nsec_ptr,
    double *halfPeriodNsec_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_output_signal_selection_clock_1pps_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_transparent_clock_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_port_ports_all_link_delay_linkDelayNsec(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *linkDelayNsec_ptr);
cparser_result_t cparser_cmd_time_set_reference_time_second_second_nanosecond_nanosecond_exec(cparser_context_t *context,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_reference_time_port_ports_all_second_second_nanosecond_nanosecond_exec(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_reference_time_port_ports_all_increase_decrease_second_second_nanosecond_nanosecond_exec(cparser_context_t *context,
    char **ports_ptr,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_reference_time_increase_decrease_second_second_nanosecond_nanosecond_exec(cparser_context_t *context,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_reference_time_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_reference_time_frequency_frequencyVal(cparser_context_t *context,
    uint32_t *frequencyVal_ptr);
cparser_result_t cparser_cmd_trap_dump_rma_l2_user_define(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_dump_rma_layer2(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_dump_rma_port_rma_bpdu_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_dump_rma_port_rma_lldp_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_dump_rma_port_rma_ptp_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_dump_rma_port_rma_eapol_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_dump_gratuitous_arp_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_dump_reason_queue_id(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_cfi(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_crc_error_action(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_ip4_checksum_error_action(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_oam_loopback_ctrl_port_all_par(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_get_oampdu_info(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_l2_user_define_index_bypass_stp(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_get_rma_l2_user_define_index_bypass_vlan(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_get_rma_l2_user_define_index_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_get_rma_l2_user_define_flood_portmask(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_cancel_mirror(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_bpdu_flood_portmask(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_eapol_flood_portmask(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_lldp_flood_portmask(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_rma_flood_portmask(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_oam_trap_target(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_mgmt_frame_trap_target(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_rma_cancel_mirror_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_action_drop_forward_trap_to_cpu_forward_and_flood(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_action_trap_to_master(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_bypass_stp_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_bypass_vlan_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_learn_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_mac_mac_min_mac_max(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_min_ptr,
    cparser_macaddr_t *mac_max_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_ether_type_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_index_compare_type_mac_ethertype_both(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trap_set_rma_l2_user_define_flood_portmask_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_action_trap_to_master(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_rma_tail_end_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    uint32_t *rma_tail_ptr,
    uint32_t *rma_tail_end_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_rma_tail_end_action_trap_to_master(cparser_context_t *context,
    uint32_t *rma_tail_ptr,
    uint32_t *rma_tail_end_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_rma_tail_end_learn_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr,
    uint32_t *rma_tail_end_ptr);
cparser_result_t cparser_cmd_trap_set_rma_layer2_rma_tail_learn_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_bpdu_port_port_all_action_drop_forward_forward_and_flood_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_bpdu_port_port_all_action_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_lldp_port_port_all_action_drop_forward_forward_and_flood_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_lldp_port_port_all_action_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_lldp_ptp_learn_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_ptp_port_port_all_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_ptp_port_port_all_action_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_eapol_learn_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_eapol_port_port_all_action_drop_forward_forward_and_flood_trap_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_port_rma_eapol_port_port_all_action_trap_to_master(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_bpdu_flood_portmask_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_eapol_flood_portmask_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_lldp_flood_portmask_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_rma_flood_portmask_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_cfi_inner_outer_forward_drop_trap(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_cfi_inner_outer_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_crc_error_action_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_ip4_checksum_error_action_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_oam_loopback_ctrl_port_all_par_drop_forward_loopback_trap(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_oampdu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_oam_trap_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_mgmt_frame_trap_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_gratuitous_arp_port_all_drop_forward_trap_to_cpu_copy_to_cpu(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_trap_set_reason_arp_dhcp_igmp_mld_bpdu_ptp_lldp_eapol_oam_lacp_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_usr_def_rma_rma_ip_hdr_err_crc_err_checksum_err_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_ip_rsvd_addr_ingr_vlan_filter_cfi_ivc_invalid_sa_mac_constraint_new_sa_pmv_forbid_sttc_pmv_dynm_pmv_hash_full_attack_acl_mirror_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_ipuc_rpf_ipmc_rpf_l2_lookup_mis_l3_bdg_lookup_mis_router_mac_intf_router_mac_non_ip_except_routing_ip_routing_dip_dmac_mis_match_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_ip6uc_hop_by_hop_ip6mc_route_header_ip4_option_ipmc_routing_lookup_miss_ipuc_null_route_ipuc_pbr_null_route_ipuc_host_route_ipuc_net_route_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_ipmc_bdg_entry_ipmc_route_entry_route_nh_age_out_icmp_redir_ipuc_mtu_ipmc_mtu_ipuc_ttl_ipmc_ttl_normal_fwd_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_rldp_rlpp_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trap_set_reason_ip6_nd_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_trunk_dump_trunk_group_all(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_dump_trunk_group_trunk_id(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_member_port_trunk_group_trunk_id(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_member_port_stack_trunk_group_stack_trunk_id(cparser_context_t *context,
    uint32_t *stack_trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_local_port_trunk_group_trunk_id(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_egress_port_trunk_group_trunk_id(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm_bind_trunk_group_trunk_id_type_l2_ipv4_ipv6(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm_bind_stack_trunk_group_stack_trunk_id_type_l2_ipv4_ipv6(cparser_context_t *context,
    uint32_t *stack_trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm_parameter_type_l2_l3_algorithm_id_algo_id(cparser_context_t *context,
    uint32_t *algo_id_ptr);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm_shift(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_traffic_separation_trunk_group_trunk_id_known_mcast_state(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_traffic_separation_trunk_group_trunk_id_flooding_state(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_get_traffic_separation_division_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_stack_trunk_hash(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_local_first_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_congst_avoid_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_link_fail_avoid_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_src_port_mapping_devID_devID_port_ports_none(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_mode_stand_alone_stacking(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_member_port_trunk_group_trunk_id_ports_none(cparser_context_t *context,
    uint32_t *trunk_id_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_member_port_stack_trunk_group_stack_trunk_id_ports_none(cparser_context_t *context,
    uint32_t *stack_trunk_id_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_local_port_trunk_group_trunk_id_member_ports_none(cparser_context_t *context,
    uint32_t *trunk_id_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_egress_port_trunk_group_trunk_id_port_devID_ports_none(cparser_context_t *context,
    uint32_t *trunk_id_ptr,
    char **devID_ports_ptr);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_bind_trunk_group_trunk_id_type_l2_ipv4_ipv6_algo_id_algo_id(cparser_context_t *context,
    uint32_t *trunk_id_ptr,
    uint32_t *algo_id_ptr);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_bind_stack_trunk_group_stack_trunk_id_type_l2_ipv4_ipv6_algo_id_algo_id(cparser_context_t *context,
    uint32_t *stack_trunk_id_ptr,
    uint32_t *algo_id_ptr);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_parameter_type_l2_algorithm_id_algo_id_dst_mac_src_mac_src_port_vlan(cparser_context_t *context,
    uint32_t *algo_id_ptr);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_parameter_type_l3_algorithm_id_algo_id_dst_ip_dst_l4_port_dst_mac_flow_label_protocol_src_ip_src_l4_port_src_mac_src_port_vlan(cparser_context_t *context,
    uint32_t *algo_id_ptr);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_shift_src_port_src_mac_dst_mac_vlan_src_ip_dst_ip_src_l4_port_dst_l4_port_proto_flow_label_shift(cparser_context_t *context,
    uint32_t *shift_ptr);
cparser_result_t cparser_cmd_trunk_set_traffic_separation_trunk_group_trunk_id_known_mcast_state_disable_enable(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_set_traffic_separation_trunk_group_trunk_id_flooding_state_disable_enable(cparser_context_t *context,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_trunk_set_traffic_separation_division_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_stack_trunk_hash_trust_recalculate(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_local_first_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_congst_avoid_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_link_fail_avoid_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_src_port_mapping_devID_devID_port_ports_none_trk_group_trunk_id_none(cparser_context_t *context,
    uint32_t *devID_ptr,
    char **ports_ptr,
    uint32_t *trunk_id_ptr);
cparser_result_t cparser_cmd_ipmcast_add_addr_vrf_id_vrf_id_sip_sip_dip_dip_vlan_vid_group_group_id_l3_enable_disable_enable_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr,
    uint32_t *group_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_ipmcast_add_addr_vrf_id_vrf_id_sip_sip_dip_dip_vlan_vid_group_group_id_l3_enable_disable_enable_l2_action_forward_trap_to_cpu_copy_to_cpu_drop_l3_action_forward_trap_to_cpu_copy_to_cpu_drop_rpf_fail_action_trap_to_cpu_drop_copy_to_cpu_assert_check_ttl_min_ttl_min_mtu_max_mtu_max_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr,
    uint32_t *group_id_ptr,
    uint32_t *ttl_min_ptr,
    uint32_t *mtu_max_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_ipmcast_add_addr_vrf_id_vrf_id_sip6_sip_dip6_dip_vlan_vid_group_group_id_l3_enable_disable_enable_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr,
    uint32_t *group_id_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_ipmcast_add_addr_vrf_id_vrf_id_sip6_sip_dip6_dip_vlan_vid_group_group_id_l3_enable_disable_enable_l2_action_forward_trap_to_cpu_copy_to_cpu_drop_l3_action_forward_trap_to_cpu_copy_to_cpu_drop_rpf_fail_action_trap_to_cpu_drop_copy_to_cpu_assert_check_ttl_min_ttl_min_mtu_max_mtu_max_priority(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr,
    uint32_t *group_id_ptr,
    uint32_t *ttl_min_ptr,
    uint32_t *mtu_max_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_ipmcast_add_stat_monitor_vrf_id_vrf_id_sip_sip_dip_dip_src_vlan_vid_monitor_type_byte_packet_byte_and_packet(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_add_stat_monitor_vrf_id_vrf_id_sip6_sip_dip6_dip_src_vlan_vid_monitor_type_byte_packet_byte_and_packet(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_del_addr_vrf_id_vrf_id_sip_sip_dip_dip_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_del_addr_vrf_id_vrf_id_sip6_sip_dip6_dip_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_del_addr_all_ip_ip6(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_del_stat_monitor_vrf_id_vrf_id_sip_sip_dip_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_del_stat_monitor_vrf_id_vrf_id_sip6_sip_dip6_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_set_addr_vrf_id_vrf_id_sip_sip_dip_dip_vlan_id_rpf_state_enable_disable(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_ipmcast_set_addr_vrf_id_vrf_id_sip6_sip_dip6_dip_vlan_id_rpf_state_enable_disable(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_ipmcast_set_ipmc_ip6mc_pkt_to_cpu_target_local_master(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_ipmc_ip6mc_routing_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_ip6mc_routing_lookup_miss_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_ip6mc_src_vlan_filter_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_zero_sip_dmac_mismatch_action_drop_trap_to_cpu_trap_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_ttl_fail_mtu_fail_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_ip6mc_bad_sip_action_drop_trap_to_cpu_trap_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ipmc_header_option_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ip6mc_zero_sip_dmac_mismatch_action_drop_trap_to_cpu_trap_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ip6mc_hl_fail_mtu_fail_action_drop_trap_to_cpu_trap_to_master(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_set_routing_exception_ip6mc_header_router_hbh_error_hbh_action_drop_forward_trap_to_cpu_copy_to_cpu_trap_to_master_copy_to_master_hard_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_addr_vrf_id_vrf_id_sip_sip_dip_dip_vlan_vid_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_get_addr_vrf_id_vrf_id_sip6_sip_dip6_dip_vlan_vid_hit_clear(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_get_ipmc_ip6mc_pkt_to_cpu_target(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_ipmc_ip6mc_routing_state(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ipmc_ip6mc_routing_lookup_miss_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ipmc_ip6mc_src_vlan_filter_state(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ipmc_header_option_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ipmc_ttl_fail_mtu_fail_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ipmc_ip6mc_zero_sip_bad_sip_dmac_mismatch_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ip6mc_header_router_hbh_error_hbh_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_routing_exception_ip6mc_hl_fail_mtu_fail_action(cparser_context_t *context);
cparser_result_t cparser_cmd_ipmcast_get_stat_vrf_id_vrf_id_sip_sip_dip_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_get_stat_vrf_id_vrf_id_sip6_sip_dip6_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_dump_addr_ip_ip6_from_begin_index_begin_to_end_index_end(cparser_context_t *context,
    uint32_t *begin_index_ptr,
    uint32_t *end_index_ptr);
cparser_result_t cparser_cmd_ipmcast_reset_stat_vrf_id_vrf_id_sip_sip_dip_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_ipmcast_reset_stat_vrf_id_vrf_id_sip6_sip_dip6_dip_src_vlan_vid(cparser_context_t *context,
    uint32_t *vrf_id_ptr,
    char **sip_ptr,
    char **dip_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_mcast_create_group_group_type_ip(cparser_context_t *context);
cparser_result_t cparser_cmd_mcast_create_group_group_type_ip_group_id_group_id(cparser_context_t *context,
    uint32_t *group_id_ptr);
cparser_result_t cparser_cmd_mcast_destroy_group_group(cparser_context_t *context,
    uint32_t *group_ptr);
cparser_result_t cparser_cmd_mcast_dump_group(cparser_context_t *context);
cparser_result_t cparser_cmd_mcast_get_egress_interface_group_group(cparser_context_t *context,
    uint32_t *group_ptr);
cparser_result_t cparser_cmd_mcast_add_egress_interface_group_group_l2_port_ports_all(cparser_context_t *context,
    uint32_t *group_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_add_egress_interface_group_group_l2_fwd_tbl_idx_index(cparser_context_t *context,
    uint32_t *group_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mcast_add_egress_interface_group_group_stack_port_ports_all(cparser_context_t *context,
    uint32_t *group_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_add_egress_interface_group_group_l3_intf_intf_id_port_ports_all_replace_bridge(cparser_context_t *context,
    uint32_t *group_ptr,
    uint32_t *intf_id_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_add_egress_interface_group_group_l3_intf_intf_id_fwd_tbl_idx_index_replace_bridge(cparser_context_t *context,
    uint32_t *group_ptr,
    uint32_t *intf_id_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mcast_del_egress_interface_group_group_l2_port_ports_all(cparser_context_t *context,
    uint32_t *group_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_del_egress_interface_group_group_stack_port_ports_all(cparser_context_t *context,
    uint32_t *group_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_del_egress_interface_group_group_l3_intf_intf_id_port_ports_all_bridge(cparser_context_t *context,
    uint32_t *group_ptr,
    uint32_t *intf_id_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mcast_del_egress_interface_group_group(cparser_context_t *context,
    uint32_t *group_ptr);
cparser_result_t cparser_cmd_pie_get_block_index_lookup_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_block_index_phase(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_block_index_group(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_meter_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_meter_entry_index_mode(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_meter_exceed_flag(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_get_meter_exceed_flag_aggregation(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_get_meter_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_get_meter_dp_sel(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_get_template_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_template_phase_phase_field_list(cparser_context_t *context,
    uint32_t *phase_ptr);
cparser_result_t cparser_cmd_pie_get_phase_vacl_iacl_eacl_template_index_vlan_sel(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_phase_vacl_template_index_vlan_fmt_sel(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_get_arp_mac_sel(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_set_block_index_lookup_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_set_block_index_phase_vacl_iacl(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_set_block_index_group_group_id_group_id_logic_id_logic_id(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *group_id_ptr,
    uint32_t *logic_id_ptr);
cparser_result_t cparser_cmd_pie_set_meter_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_set_meter_dp_sel_deepest_color_lowest_index(cparser_context_t *context);
cparser_result_t cparser_cmd_pie_set_meter_entry_index_dlb_lb0_rate_lb0_rate_lb0_burst_lb0_burst_lb1_rate_lb1_rate_lb1_burst_lb1_burst(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *lb0_rate_ptr,
    uint32_t *lb0_burst_ptr,
    uint32_t *lb1_rate_ptr,
    uint32_t *lb1_burst_ptr);
cparser_result_t cparser_cmd_pie_set_meter_entry_index_srtcm_color_aware_color_blind_cir_cir_cbs_cbs_ebs_ebs(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *cir_ptr,
    uint32_t *cbs_ptr,
    uint32_t *ebs_ptr);
cparser_result_t cparser_cmd_pie_set_meter_entry_index_trtcm_color_aware_color_blind_cir_cir_cbs_cbs_pir_pir_pbs_pbs(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *cir_ptr,
    uint32_t *cbs_ptr,
    uint32_t *pir_ptr,
    uint32_t *pbs_ptr);
cparser_result_t cparser_cmd_pie_set_meter_entry_index_mode_byte_packet(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_set_template_template_index_field_index_index_field_type_field_name(cparser_context_t *context,
    uint32_t *template_index_ptr,
    uint32_t *index_ptr,
    char **field_name_ptr);
cparser_result_t cparser_cmd_pie_set_phase_vacl_iacl_eacl_template_index_vlan_sel_inner_outer_forward_source_forward(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_set_phase_vacl_template_index_vlan_fmt_sel_original_modified(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pie_set_arp_mac_sel_l2_arp(cparser_context_t *context);
cparser_result_t cparser_cmd_field_selector_get_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_field_selector_set_index_index_format_raw_llc_l3_arp_ip_header_ip_payload_l4_payload_offset_offset(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_range_check_get_ip_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_range_check_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_range_check_set_ip_entry_index_low_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_range_check_set_ip_entry_index_up_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_range_check_set_ip_entry_index_type_sip_dip_sip6_dip6(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_range_check_set_ip_entry_index_type_sip6_suffix_dip6_suffix(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_range_check_set_entry_index_ivid_ovid_l4_sport_l4_dport_l4_port_pkt_len_l3_len_up_bound_upper_low_bound_lower(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *upper_ptr,
    uint32_t *lower_ptr);
cparser_result_t cparser_cmd_gpio_set_dev_dev_id_access_mdc_extra_address_dev_address(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    uint32_t *dev_address_ptr);
cparser_result_t cparser_cmd_gpio_set_dev_dev_id_pin_gpio_id_init_direction_in_out_default_default_value(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    uint32_t *gpio_id_ptr,
    uint32_t *default_value_ptr);
cparser_result_t cparser_cmd_gpio_set_dev_dev_id_pin_gpio_id_data(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    uint32_t *gpio_id_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_gpio_set_dev_dev_id_state_disable_enable(cparser_context_t *context,
    uint32_t *dev_id_ptr);
cparser_result_t cparser_cmd_gpio_get_dev_dev_id_pin_gpio_id(cparser_context_t *context,
    uint32_t *dev_id_ptr,
    uint32_t *gpio_id_ptr);
cparser_result_t cparser_cmd_spi_set_reg_reg_add_reg_data(cparser_context_t *context,
    uint32_t *reg_add_ptr,
    uint32_t *reg_data_ptr);
cparser_result_t cparser_cmd_spi_set_sclk_sclk_mosi_mosi_miso_miso_ss_ss_reset_reset_int_int(cparser_context_t *context,
    uint32_t *sclk_ptr,
    uint32_t *mosi_ptr,
    uint32_t *miso_ptr,
    uint32_t *ss_ptr,
    uint32_t *reset_ptr,
    uint32_t *int_ptr);
cparser_result_t cparser_cmd_spi_get_reg_reg_add(cparser_context_t *context,
    uint32_t *reg_add_ptr);
cparser_result_t cparser_cmd_i2c_init_unit_unit_dev_dev_intf_intf_sck_gpiodev_sck_gpiodev_sck_pin_sck_pin_sda_gpiodev_sda_gpiodev_sda_pin_sda_pin_addr_width_addr_width_data_width_data_width_read_type_read_type_scl_freq_scl_freq_i2c_delay_i2c_delay_chip_addr_chip_addr(cparser_context_t *context,
    uint32_t *unit_ptr,
    uint32_t *dev_ptr,
    uint32_t *intf_ptr,
    uint32_t *sck_gpiodev_ptr,
    uint32_t *sck_pin_ptr,
    uint32_t *sda_gpiodev_ptr,
    uint32_t *sda_pin_ptr,
    uint32_t *addr_width_ptr,
    uint32_t *data_width_ptr,
    uint32_t *read_type_ptr,
    uint32_t *scl_freq_ptr,
    uint32_t *i2c_delay_ptr,
    uint32_t *chip_addr_ptr);
cparser_result_t cparser_cmd_i2c_set_unit_unit_dev_dev_reg_reg_data_data_data1_data2_data3(cparser_context_t *context,
    uint32_t *unit_ptr,
    uint32_t *dev_ptr,
    uint32_t *reg_ptr,
    uint32_t *data_ptr,
    uint32_t *data1_ptr,
    uint32_t *data2_ptr,
    uint32_t *data3_ptr);
cparser_result_t cparser_cmd_i2c_set_unit_unit_dev_dev_reg_reg_data_str_data_len_len(cparser_context_t *context,
    uint32_t *unit_ptr,
    uint32_t *dev_ptr,
    uint32_t *reg_ptr,
    char **data_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_i2c_get_unit_unit_dev_dev_reg_reg(cparser_context_t *context,
    uint32_t *unit_ptr,
    uint32_t *dev_ptr,
    uint32_t *reg_ptr);

#endif /* __CPARSER_TREE_H__ */
