/*
 *  ## Please DO NOT edit this file!! ##
 *  This file is auto-generated from the register source files.
 *  Any modifications to this file will be LOST when it is re-generated.
 *
 *  ----------------------------------------------------------------
 *  (C) Copyright 2009-2016 Realtek Semiconductor Corp.
 *
 *  This program is the proprietary software of Realtek Semiconductor
 *  Corporation and/or its licensors, and only be used, duplicated,
 *  modified or distributed under the authorized license from Realtek.
 *
 *  ANY USE OF THE SOFTWARE OTHER THAN AS AUTHORIZED UNDER
 *  THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
 *
 *  ----------------------------------------------------------------
 *  Purpose: chip register definition and structure of RTL8373
 *
 *  ----------------------------------------------------------------
 */

#ifndef __RTL8373_TABLE_STRUCT_H__
#define __RTL8373_TABLE_STRUCT_H__

typedef enum rtl8373_vlan_tblField_list_e
{
    VLAN_TBL_RSVtf = 0,
    VLAN_TBL_IVL_SVLtf,
    VLAN_TBL_SVLAN_CHK_IVL_SVLtf,
    VLAN_TBL_FID_MSTItf,
    VLAN_TBL_UNTAGSETtf,
    VLAN_TBL_MBRtf,
    VLAN_TBLFIELD_LIST_END = 6
} rtl8373_vlan_tblField_list_t;

typedef enum rtl8373_l2_ipmcField_list_e
{
    L2_IPMC_SIPtf = 0,
    L2_IPMC_DIPtf,
    L2_IPMC_L3LOOKUPtf,
    L2_IPMC_MBRtf,
    L2_IPMC_IGMPIDXtf,
    L2_IPMC_IGMPASICtf,
    L2_IPMCFIELD_LIST_END = 6
} rtl8373_l2_ipmcField_list_t;

typedef enum rtl8373_l2_mcField_list_e
{
    L2_MC_MACtf = 0,
    L2_MC_VID_FIDtf,
    L2_MC_L3LOOKUPtf,
    L2_MC_IVL_SVLtf,
    L2_MC_MBRtf,
    L2_MC_IGMPIDXtf,
    L2_MC_IGMPASICtf,
    L2_MCFIELD_LIST_END = 7
} rtl8373_l2_mcField_list_t;

typedef enum rtl8373_l2_ucField_list_e
{
    L2_UC_MACtf = 0,
    L2_UC_VID_FIDtf,
    L2_UC_L3LOOKUPtf,
    L2_UC_IVL_SVLtf,
    L2_UC_SPAtf,
    L2_UC_AGEtf,
    L2_UC_AUTH1Xtf,
    L2_UC_STATICtf,
    L2_UCFIELD_LIST_END = 8
} rtl8373_l2_ucField_list_t;

typedef enum rtl8373_igmp_group_tblField_list_e
{
    IGMP_GROUP_TBL_REPORT_SUPP_FLAGtf = 0,
    IGMP_GROUP_TBL_P9_TMRtf,
    IGMP_GROUP_TBL_P8_TMRtf,
    IGMP_GROUP_TBL_P7_TMRtf,
    IGMP_GROUP_TBL_P6_TMRtf,
    IGMP_GROUP_TBL_P5_TMRtf,
    IGMP_GROUP_TBL_P4_TMRtf,
    IGMP_GROUP_TBL_P3_TMRtf,
    IGMP_GROUP_TBL_P2_TMRtf,
    IGMP_GROUP_TBL_P1_TMRtf,
    IGMP_GROUP_TBL_P0_TMRtf = 10,
    IGMP_GROUP_TBLFIELD_LIST_END = 11
} rtl8373_igmp_group_tblField_list_t;

typedef enum rtl8373_acl_act_entryField_list_e
{
    ACL_ACT_ENTRY_BYPASS_ACTtf = 0,
    ACL_ACT_ENTRY_GPIO_ENtf,
    ACL_ACT_ENTRY_GPIO_PINtf,
    ACL_ACT_ENTRY_ACL_INTtf,
    ACL_ACT_ENTRY_PMSKtf,
    ACL_ACT_ENTRY_FWD_EXTtf,
    ACL_ACT_ENTRY_FWD_ACTtf,
    ACL_ACT_ENTRY_POLICING_LOG_ACTtf,
    ACL_ACT_ENTRY_METER_LOG_IDXtf,
    ACL_ACT_ENTRY_RMK_VALUEtf,
    ACL_ACT_ENTRY_RMK_ACTtf = 10,
    ACL_ACT_ENTRY_ACL_PRItf,
    ACL_ACT_ENTRY_SVIDtf,
    ACL_ACT_ENTRY_SACTtf,
    ACL_ACT_ENTRY_TAG_FMTtf,
    ACL_ACT_ENTRY_CVIDtf,
    ACL_ACT_ENTRY_CACT_EXTtf,
    ACL_ACT_ENTRY_CACTtf,
    ACL_ACT_ENTRYFIELD_LIST_END = 18
} rtl8373_acl_act_entryField_list_t;

typedef enum rtl8373_acl_rule_dataField_list_e
{
    ACL_RULE_DATA_VALIDtf = 0,
    ACL_RULE_DATA_ACTIVE_PMSKtf,
    ACL_RULE_DATA_L4FMTtf,
    ACL_RULE_DATA_L3FMTtf,
    ACL_RULE_DATA_TAG_PPPOEtf,
    ACL_RULE_DATA_TIDtf,
    ACL_RULE_DATA_FIELD_7tf,
    ACL_RULE_DATA_FIELD_6tf,
    ACL_RULE_DATA_FIELD_5tf,
    ACL_RULE_DATA_FIELD_4tf,
    ACL_RULE_DATA_FIELD_3tf = 10,
    ACL_RULE_DATA_FIELD_2tf,
    ACL_RULE_DATA_FIELD_1tf,
    ACL_RULE_DATA_FIELD_0tf,
    ACL_RULE_DATA_BMASK_ACTIVE_PMSKtf,
    ACL_RULE_DATA_BMSK_L4FMTtf,
    ACL_RULE_DATA_BMSK_L3FMTtf,
    ACL_RULE_DATA_BMSK_TAG_PPPOEtf,
    ACL_RULE_DATA_BMSK_TIDtf,
    ACL_RULE_DATA_BMSK_FIELD_7tf,
    ACL_RULE_DATA_BMSK_FIELD_6tf = 20,
    ACL_RULE_DATA_BMSK_FIELD_5tf,
    ACL_RULE_DATA_BMSK_FIELD_4tf,
    ACL_RULE_DATA_BMSK_FIELD_3tf,
    ACL_RULE_DATA_BMSK_FIELD_2tf,
    ACL_RULE_DATA_BMSK_FIELD_1tf,
    ACL_RULE_DATA_BMSK_FIELD_0tf,
    ACL_RULE_DATAFIELD_LIST_END = 27
} rtl8373_acl_rule_dataField_list_t;

typedef enum rtk_table_list_e
{
    VLAN_TBLt = 0,
    L2_IPMCt,
    L2_MCt,
    L2_UCt,
    IGMP_GROUP_TBLt,
    ACL_ACT_ENTRYt,
    ACL_RULE_DATAt,
    TABLE_LIST_END = 7
} rtk_table_list_t;

typedef struct rtk_tableField_s
{
    unsigned short lsp;             /* LSP of the field */
    unsigned short len;             /* field length */
} rtk_tableField_t;

typedef struct rtk_table_s
{
    unsigned int set;               /* access table set */
    unsigned int type;              /* access table type */
    unsigned int size;              /* table size */
    unsigned int datareg_num;       /* total data registers */
    unsigned int field_num;         /* total field numbers */
    rtk_tableField_t *fields;       /* table fields */
} rtk_table_t;


#endif    /* __RTL8373_TABLE_STRUCT_H__ */

